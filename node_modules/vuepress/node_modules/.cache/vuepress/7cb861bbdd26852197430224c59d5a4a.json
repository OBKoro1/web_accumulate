{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/5最长回文子串.md?vue&type=template&id=72df4ad1&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/5最长回文子串.md","mtime":1636107879477},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"_5-最长回文子串\\\"><a href=\\\"#_5-最长回文子串\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 5 最长回文子串</h2> \"),_vm._ssrNode(\"<h3 id=\\\"题目链接\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#题目链接\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> \"),_vm._ssrNode(\"<a href=\\\"https://leetcode-cn.com/problems/longest-palindromic-substring/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"题目链接\"),_c('OutboundLink')],2)],2),_vm._ssrNode(\" <h3 id=\\\"难度：中等\\\"><a href=\\\"#难度：中等\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：中等</h3> <h3 id=\\\"思路\\\"><a href=\\\"#思路\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 思路:</h3> <p>中心扩展法</p> <h3 id=\\\"想\\\"><a href=\\\"#想\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"一\\\"><a href=\\\"#一\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 一</h3> <h3 id=\\\"想-2\\\"><a href=\\\"#想-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"再\\\"><a href=\\\"#再\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 再</h3> <h3 id=\\\"看\\\"><a href=\\\"#看\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 看</h3> <h3 id=\\\"答\\\"><a href=\\\"#答\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 答</h3> <h3 id=\\\"案\\\"><a href=\\\"#案\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 案</h3> <h3 id=\\\"想-3\\\"><a href=\\\"#想-3\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"一-2\\\"><a href=\\\"#一-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 一</h3> <h3 id=\\\"想-4\\\"><a href=\\\"#想-4\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"再-2\\\"><a href=\\\"#再-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 再</h3> <h3 id=\\\"看-2\\\"><a href=\\\"#看-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 看</h3> <h3 id=\\\"答-2\\\"><a href=\\\"#答-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 答</h3> <h3 id=\\\"案-2\\\"><a href=\\\"#案-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 案</h3> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <p>双指针：中心扩展</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param {string} s\\n * @return {string}\\n */</span>\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">longestPalindrome</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>s<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> result <span class=\\\"token operator\\\">=</span> s<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// 遍历整个字符串</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> s<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 选择一个中心点 j&lt;=2尝试偶数和奇数两种形式的中心点</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span> j<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 对称回文或者中心点回文</span>\\n      <span class=\\\"token keyword\\\">let</span> left <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 左</span>\\n        right <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">+</span> j<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 右</span>\\n      <span class=\\\"token comment\\\">// 当左右两遍的字符相同时 向外扩展直到两端不相同</span>\\n      <span class=\\\"token comment\\\">// 左右的边界</span>\\n      <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>left <span class=\\\"token operator\\\">&gt;=</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> right <span class=\\\"token operator\\\">&lt;</span> s<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&amp;&amp;</span> s<span class=\\\"token punctuation\\\">[</span>left<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">===</span> s<span class=\\\"token punctuation\\\">[</span>right<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        left<span class=\\\"token operator\\\">--</span><span class=\\\"token punctuation\\\">,</span> right<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 扩展</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token comment\\\">// 找到回文</span>\\n      <span class=\\\"token keyword\\\">let</span> length <span class=\\\"token operator\\\">=</span> right <span class=\\\"token operator\\\">-</span> left <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// (right - 1) - (left + 1) + 1</span>\\n      <span class=\\\"token comment\\\">// 对比 更新回文</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>length <span class=\\\"token operator\\\">&gt;</span> result<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        result <span class=\\\"token operator\\\">=</span> s<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span>left <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br><span class=\\\"line-number\\\">18</span><br><span class=\\\"line-number\\\">19</span><br><span class=\\\"line-number\\\">20</span><br><span class=\\\"line-number\\\">21</span><br><span class=\\\"line-number\\\">22</span><br><span class=\\\"line-number\\\">23</span><br><span class=\\\"line-number\\\">24</span><br><span class=\\\"line-number\\\">25</span><br><span class=\\\"line-number\\\">26</span><br><span class=\\\"line-number\\\">27</span><br><span class=\\\"line-number\\\">28</span><br></div></div><p>动态规划: 中心扩展</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param {string} s\\n * @return {string}\\n */</span>\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">longestPalindrome</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>s<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> n <span class=\\\"token operator\\\">=</span> s<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> dp <span class=\\\"token operator\\\">=</span> Array<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Array</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Array</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">fill</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> n<span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>i <span class=\\\"token operator\\\">&gt;=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">--</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span>j <span class=\\\"token operator\\\">&lt;</span> n<span class=\\\"token punctuation\\\">;</span>j<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            dp<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> s<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">==</span> s<span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>j <span class=\\\"token operator\\\">-</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">||</span> dp<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>dp<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&amp;&amp;</span> j <span class=\\\"token operator\\\">-</span> i <span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">&gt;</span> res<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                res <span class=\\\"token operator\\\">=</span> s<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substring</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span>j<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br><span class=\\\"line-number\\\">18</span><br></div></div><h3 id=\\\"鼓励我一下：\\\"><a href=\\\"#鼓励我一下：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 鼓励我一下：</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"觉得还不错的话，给我的项目点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"star\"),_c('OutboundLink')],2),_vm._ssrNode(\"吧\\n\")],2),_vm._ssrNode(\" \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}