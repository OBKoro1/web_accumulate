{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/判断字符串的循环移动.md?vue&type=template&id=058bb978&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/判断字符串的循环移动.md","mtime":1636107879479},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"判断字符串的循环移动\\\"><a href=\\\"#判断字符串的循环移动\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 判断字符串的循环移动</h2> <h3 id=\\\"难度：简单\\\"><a href=\\\"#难度：简单\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：简单</h3> <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <p>可以检验某个单词是否为另一个单词的子字符串。给定 s1 和 s2，请设计一种方法来检验 s2 是否为 s1 的循环移动后的字符串。</p> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <p>s1 = <code>waterbottle</code>;\\ns2 = <code>erbottlewat</code>;\\n返回<code>true</code>;</p> <p>s1 = <code>apple</code>;\\ns2 = <code>ppale</code>;\\n返回<code>false</code>;</p> <h3 id=\\\"思路分析：\\\"><a href=\\\"#思路分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 思路分析：</h3> <p>将其中一个字符串转成数组来操作，然后再转成字符，回头来比较字符串。</p> <h3 id=\\\"代码模板：\\\"><a href=\\\"#代码模板：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码模板：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param s1: the first string\\n * @param s2: the socond string\\n * @return: true if s2 is a rotation of s1 or false\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">isRotation</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>s1<span class=\\\"token punctuation\\\">,</span> s2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br></div></div><h3 id=\\\"想一想再看答案\\\"><a href=\\\"#想一想再看答案\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-2\\\"><a href=\\\"#想一想再看答案-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-3\\\"><a href=\\\"#想一想再看答案-3\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 将最后的值拿出来 再放到第一位上去</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">isRotation</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>s<span class=\\\"token punctuation\\\">,</span> t<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>s<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">===</span> t<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&amp;&amp;</span> s <span class=\\\"token operator\\\">&amp;&amp;</span> t<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> s<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      t <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>t<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转数组</span>\\n      <span class=\\\"token keyword\\\">let</span> pop <span class=\\\"token operator\\\">=</span> t<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 拿最后一个元素</span>\\n      t<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>pop<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 添加到第一个元素</span>\\n      t <span class=\\\"token operator\\\">=</span> t<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转字符</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>t <span class=\\\"token operator\\\">===</span> s<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 比较</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 字符串长度相等 并且有值</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token string\\\">'输出：'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">isRotation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'waterbottle'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'erbottlewat'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">isRotation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'apple'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'ppale'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br><span class=\\\"line-number\\\">18</span><br></div></div> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}