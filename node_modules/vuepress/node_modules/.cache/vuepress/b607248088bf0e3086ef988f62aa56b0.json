{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/codeBlack/随机数组成的数组.md?vue&type=template&id=8194e62c&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/codeBlack/随机数组成的数组.md","mtime":1636107879453},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"随机数数组\\\"><a href=\\\"#随机数数组\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 随机数数组</h1> <p>所谓的随机数数组就是：由随机数组成的数组（数组的长度和随机数的范围可自定义）</p> <p>当然有很多方法，只是用下面这个API只用一行代码就可以实现这个功能，见猎心喜，然后放了上来。</p> <h2 id=\\\"原理\\\"><a href=\\\"#原理\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 原理</h2> <ol><li>先创建一个类似数组的对象(即对象拥有<code>length</code>属性)</li> <li>利用<code>Array.from</code>的第二个参数，对每个元素进行处理(生成随机数)。</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * 由随机数组成的数组：长度和随机数范围可自定义\\n * @param {number} length 数组的长度\\n * @param {number} limit 随机数的范围\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">genNumArr</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>length<span class=\\\"token punctuation\\\">,</span> limit<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Array.from第二个参数 类似数组的map方法，对每个元素进行处理，将处理后的值放入返回的数组</span>\\n  <span class=\\\"token keyword\\\">return</span> Array<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> length <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">floor</span><span class=\\\"token punctuation\\\">(</span>Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">random</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> limit<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">genNumArr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 数组长度为1000，每个元素的范围在0-99之间</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br></div></div>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://codepen.io/OBKoro1/pen/MBOQMX\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"CodePen\"),_c('OutboundLink')],2)]),_vm._ssrNode(\" \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/codeBlack\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}