{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/反转整数.md?vue&type=template&id=7633e61d&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/反转整数.md","mtime":1636107879479},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"反转整数\\\"><a href=\\\"#反转整数\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 反转整数</h2> <h3 id=\\\"描述\\\"><a href=\\\"#描述\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述</h3> <p>将一个整数中的数字进行颠倒，当颠倒后的整数溢出时，返回 0 (标记为 32 位整数)。</p> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <p>给定 x = 123，返回 321</p> <p>给定 x = -123，返回 -321</p> <p>给定 x = 1534236469， 返回 0</p> <hr> <h3 id=\\\"这题很简单-自己想一下！\\\"><a href=\\\"#这题很简单-自己想一下！\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 这题很简单,自己想一下！</h3> <h3 id=\\\"这题很简单-自己想一下！-2\\\"><a href=\\\"#这题很简单-自己想一下！-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 这题很简单,自己想一下！</h3> <h3 id=\\\"这题很简单-自己想一下！-3\\\"><a href=\\\"#这题很简单-自己想一下！-3\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 这题很简单,自己想一下！</h3> <p>给</p> <p>你</p> <p>点</p> <p>时</p> <p>间</p> <p>想</p> <p>一</p> <p>下</p> <hr> <h3 id=\\\"解法：\\\"><a href=\\\"#解法：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 解法：</h3> <ol><li>最优：转字符串 再转数组进行操作</li> <li>看到有人用四则运算+遍历反转整数，会把这个解法放到下面</li></ol> <h3 id=\\\"提示\\\"><a href=\\\"#提示\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 提示:</h3> <p>整数溢出的值为<code>Math.pow(2, 31) - 1</code>和<code>Math.pow(-2, 31) + 1</code>，转为数字：<code>2147483647</code>和<code>-2147483647</code></p> <p>这部分跟位操作符，二进制有关，有兴趣可以去搜下。</p> <h3 id=\\\"code\\\"><a href=\\\"#code\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> code:</h3> <ol><li>转数组操作：</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reverseInteger</span> <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 负数提取数字</span>\\n    n <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'-'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reverse</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    n <span class=\\\"token operator\\\">=</span> <span class=\\\"token operator\\\">+</span>n<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转数字</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转字符</span>\\n    n <span class=\\\"token operator\\\">=</span> <span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reverse</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转为数组 颠倒数组 再合字符 最后转数字</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">&gt;=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">31</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">||</span> n <span class=\\\"token operator\\\">&lt;=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">31</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 判断溢出</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> n<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br></div></div><ol start=\\\"2\\\"><li>遍历，一位一位颠倒：</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reverseInteger</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">let</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">!==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 从个位起一位一位的颠倒</span>\\n    res <span class=\\\"token operator\\\">=</span> res <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    n <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// n除以10， 一位数转化完成 到最后小于1 被转成0 退出循环</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>res <span class=\\\"token operator\\\">&gt;=</span> <span class=\\\"token number\\\">2147483647</span> <span class=\\\"token operator\\\">||</span> res <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2147483647</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br></div></div><h3 id=\\\"转数组操作运行效率也更高点：\\\"><a href=\\\"#转数组操作运行效率也更高点：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 转数组操作运行效率也更高点：</h3> <p><img src=\\\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1fujnet3b8vj318z0kh41p.jpg?raw=true\\\" alt></p> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}