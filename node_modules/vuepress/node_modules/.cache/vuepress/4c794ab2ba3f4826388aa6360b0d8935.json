{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/CSS/CSS权重规则.md?vue&type=template&id=51c0e61e&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/CSS/CSS权重规则.md","mtime":1636107879468},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"css-权重规则\\\"><a href=\\\"#css-权重规则\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> CSS 权重规则</h2> <p>日常开发中，或多或少都会遇到css规则不生效的问题，为了让我们能够减少调试css规则的时间，深刻理解css权重，就十分关键了.</p> <h2 id=\\\"权重规则总结\\\"><a href=\\\"#权重规则总结\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 权重规则总结:</h2> <ol><li>!important 优先级最高，但也会被权重高的 important 所覆盖</li> <li>行内样式总会覆盖外部样式表的任何样式(除了!important)</li> <li>单独使用一个选择器的时候，不能跨等级使 css 规则生效</li> <li>如果两个权重不同的选择器作用在同一元素上，权重值高的 css 规则生效</li> <li>如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则.</li> <li>权重相同时，与元素距离近的选择器生效</li></ol> <hr> <h3 id=\\\"css-权重优先级用来干嘛？\\\"><a href=\\\"#css-权重优先级用来干嘛？\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> css 权重优先级用来干嘛？</h3> <p>在同一个元素使用不同的方式，声明了相同的一条或多条 css 规则，<strong>浏览器会通过权重来判断哪一种方式的声明，与这个元素最为相关，从而在该元素上应用这个声明方式声明的所有 css 规则</strong>。</p> <h3 id=\\\"权重的五个等级及其权重\\\"><a href=\\\"#权重的五个等级及其权重\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 权重的五个等级及其权重</h3> <ul><li><p>!important;</p></li> <li><p>行内样式;</p></li> <li><p>ID 选择器, 权重:100;</p></li> <li><p>class,属性选择器和伪类选择器，权重:10;</p> <p>属性选择器指的是:根据元素的属性及属性值来选择元素，比如button的type属性等。\\n伪类选择器: :active :focus等选项.</p></li> <li><p>标签选择器和伪元素选择器，权重:1;</p> <p>伪元素选择器： :before :after</p></li></ul> <h3 id=\\\"等级关系\\\"><a href=\\\"#等级关系\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 等级关系:</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">!</span>important<span class=\\\"token operator\\\">&gt;</span>行内样式<span class=\\\"token operator\\\">&gt;</span><span class=\\\"token constant\\\">ID</span>选择器 <span class=\\\"token operator\\\">&gt;</span> 类选择器 <span class=\\\"token operator\\\">|</span> 属性选择器 <span class=\\\"token operator\\\">|</span> 伪类选择器 <span class=\\\"token operator\\\">&gt;</span> 元素选择器\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><hr> <h2 id=\\\"权重规则：\\\"><a href=\\\"#权重规则：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 权重规则：</h2> <h3 id=\\\"_1-不推荐使用-important\\\"><a href=\\\"#_1-不推荐使用-important\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 1.不推荐使用!important</h3> <p>不推荐使用<code>!important</code>，因为<code>!important</code>根本没有结构与上下文可言，并且很多时候权重的问题，就是因为不知道在哪里定义了一个<code>!important</code>而导致的。</p> <h4 id=\\\"覆盖-important\\\"><a href=\\\"#覆盖-important\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 覆盖 important:</h4> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"虽然我们应该尽量避免使用!important，但你应该知道如何覆盖 important，加点权重就可以实现，codepen 的\"),_vm._ssrNode(\"<a href=\\\"https://codepen.io/OBKoro1/pen/ZoVxgQ\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"demo\"),_c('OutboundLink')],2)],2),_vm._ssrNode(\" <div class=\\\"language-css line-numbers-mode\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">//!important 优先级最高，但也会被权重高的important所覆盖\\n&lt;button id=&quot;a&quot; class=&quot;a&quot;&gt;aaa&lt;/button&gt;\\n#a</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">background</span><span class=\\\"token punctuation\\\">:</span> blue  <span class=\\\"token important\\\">!important</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">/* id的important覆盖class的important*/</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token selector\\\">.a</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">background</span><span class=\\\"token punctuation\\\">:</span> red  <span class=\\\"token important\\\">!important</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br></div></div><h3 id=\\\"_2-行内样式总会覆盖外部样式表的任何样式-会被-important覆盖\\\"><a href=\\\"#_2-行内样式总会覆盖外部样式表的任何样式-会被-important覆盖\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 2.行内样式总会覆盖外部样式表的任何样式,会被<code>!important</code>覆盖</h3> <h3 id=\\\"_3-单独使用一个选择器的时候，不能跨等级使-css-规则生效\\\"><a href=\\\"#_3-单独使用一个选择器的时候，不能跨等级使-css-规则生效\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 3.单独使用一个选择器的时候，不能跨等级使 css 规则生效</h3> <p><strong>无论多少个 class 组成的选择器，都没有一个 ID 选择器权重高</strong>。类似的，无论多少个元素组成的选择器，都没有一个 class 选择器权重高、无论多少个 ID 组成的选择器，都没有行内样式权重高。</p> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"codepen 的\"),_vm._ssrNode(\"<a href=\\\"https://codepen.io/OBKoro1/pen/ZoVxgQ\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"demo\"),_c('OutboundLink')],2),_vm._ssrNode(\";\")],2),_vm._ssrNode(\" <pre><code>    在demo中使用了11个class组成一个选择器，最后还是一个ID选择器，设置的样式生效。\\n</code></pre> <h4 id=\\\"可以想象在玄幻小说的那种等级制度，没有突破那个等级，就没有可比性。\\\"><a href=\\\"#可以想象在玄幻小说的那种等级制度，没有突破那个等级，就没有可比性。\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 可以想象在玄幻小说的那种等级制度，没有突破那个等级，就没有可比性。</h4> <p>所以权重是在双方处于同一等级的情况下，才开始对比。</p> <h3 id=\\\"_4-如果两个权重不同的选择器作用在同一元素上，权重值高的-css-规则生效\\\"><a href=\\\"#_4-如果两个权重不同的选择器作用在同一元素上，权重值高的-css-规则生效\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 4.如果两个权重不同的选择器作用在同一元素上，权重值高的 css 规则生效</h3> <p>选择器可能会包含一个或者多个与权重相关的计算点，若经过权重值计算得到的权重值越大，则认为这个选择器的权重高。举一个简单的栗子:</p> <div class=\\\"language-css line-numbers-mode\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">.test #test</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token punctuation\\\">}</span> // id 100+class 10=110<span class=\\\"token selector\\\">;\\n.test #test span</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> // id 100+class 10+span 1=111<span class=\\\"token selector\\\">;\\n.test #test .sonClass</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> // id 100+class 10+class 10=120<span class=\\\"token punctuation\\\">;</span> //生效\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><h3 id=\\\"_5-如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则\\\"><a href=\\\"#_5-如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 5.如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则.</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://codepen.io/OBKoro1/pen/jxXKez\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"demo\"),_c('OutboundLink')],2)]),_vm._ssrNode(\" <div class=\\\"language-css line-numbers-mode\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">&lt;div id=&quot;app&quot;&gt;\\n    &lt;div class=&quot;test&quot; id=&quot;test&quot;&gt;\\n    &lt;span &gt;啦啦啦&lt;/span&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n#test span</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span>blue<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token selector\\\">#app span</span><span class=\\\"token punctuation\\\">{</span> // 生效 因为后面出现\\n    <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span> red<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br></div></div><h3 id=\\\"_6-权重相同时，与元素距离近的选择器生效\\\"><a href=\\\"#_6-权重相同时，与元素距离近的选择器生效\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 6.权重相同时，与元素距离近的选择器生效</h3> <p>比如不同的 style 表，head 头部等,来看下面的栗子：</p> <div class=\\\"language-css line-numbers-mode\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">#content h1</span> <span class=\\\"token punctuation\\\">{</span> // css样式表中\\n    <span class=\\\"token property\\\">padding</span><span class=\\\"token punctuation\\\">:</span> 5px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token selector\\\">&lt;style type=&quot;text/css&quot;&gt;\\n    #content h1</span> <span class=\\\"token punctuation\\\">{</span> // html头部 因为html头部离元素更近一点，所以生效\\n    <span class=\\\"token property\\\">padding</span><span class=\\\"token punctuation\\\">:</span> 10px<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n&lt;/style&gt;\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br></div></div><h2 id=\\\"建议：\\\"><a href=\\\"#建议：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 建议：</h2> <ol><li>避免使用<code>!important</code>;</li> <li>利用 id 增加选择器权重;</li> <li>减少选择器的个数（避免层层嵌套）;\\n</li></ol> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/web_accumulate\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}