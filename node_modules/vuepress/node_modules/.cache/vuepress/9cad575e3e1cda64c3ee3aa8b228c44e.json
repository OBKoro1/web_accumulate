{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/codeBlack/vuex三步.md?vue&type=template&id=554c9f8e&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/codeBlack/vuex三步.md","mtime":1636107879452},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"vuex-的使用入门-极简使用\"><a class=\"header-anchor\" href=\"#vuex-的使用入门-极简使用\" aria-hidden=\"true\">#</a> Vuex 的使用入门-极简使用</h2>\n<p>vuex 是为了解决复杂项目组件之间的数据通信的一个全局状态管理机制，相信很多人都听说过这个东西。有部分人还没有在项目中使用<code>Vuex</code>管理过数据状态，实际上<code>Vuex</code>的起步使用非常之简单，看完本文之后，赶紧在项目中用起来吧！</p>\n<h3 id=\"_1-安装-vuex-包\"><a class=\"header-anchor\" href=\"#_1-安装-vuex-包\" aria-hidden=\"true\">#</a> 1. 安装 Vuex 包</h3>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>npm install vuex --save\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_2-新建一个store-js文件\"><a class=\"header-anchor\" href=\"#_2-新建一个store-js文件\" aria-hidden=\"true\">#</a> 2. 新建一个<code>store.js</code>文件:</h3>\n<p>Vuex 必需的内容都在下面这个文件中，文件中做了详细的注释，注意其中的异步操作<code>actions</code>和同步操作<code>mutations</code>。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// store.js</span>\n<span class=\"token comment\">// 引入vue 和 vuex</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用vuex插件,跟router一样</span>\n<span class=\"token comment\">// 直接导出 一个 Store 的实例</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 这里是要读取或者写入数据的地方,跟组件里的data项一样</span>\n  state<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'oldName'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 通过actions的commit触发mutations来修改state的数据</span>\n  <span class=\"token comment\">// 这里可以包含任意的异步操作，只要最后</span>\n  actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 第一个参数是用于触发mutations，第二个参数是使用的地方传过来的数据</span>\n    <span class=\"token function\">nameAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> commit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// do something 可以是ajax、promise等异步操作</span>\n      <span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateName'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 同步操作直接修改state里面的数据</span>\n  mutations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 第一个参数是上面的state数据,第二个参数是commit传过来的数据,用以修改state数据。</span>\n    <span class=\"token function\">updateName</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更改state里的数据</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_3-引入到main-js入口文件中-最后一步\"><a class=\"header-anchor\" href=\"#_3-引入到main-js入口文件中-最后一步\" aria-hidden=\"true\">#</a> 3. 引入到<code>main.js</code>入口文件中 - 最后一步</h3>\n<p>这是最后一步了，做完这步，然后我们就可以在项目中使用<code>Vuex</code>了。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// main.js</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 引入store</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token punctuation\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  store<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 挂载在Vue的配置项中</span>\n  components<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> App <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;App/>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在组件中使用-vuex：\"><a class=\"header-anchor\" href=\"#在组件中使用-vuex：\" aria-hidden=\"true\">#</a> 在组件中使用 vuex：</h3>\n<p>在组件中的使用如下，省略了<code>template</code>部分:</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// 组件中</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vuex的数据'</span>，<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  methods<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">changeName</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// commit只接受一个参数，\b数据多的话，就用对象传递</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nameAction'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'传过去的新名字'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 先触发actions，再由commit触发mutations来修改数据</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在-js-文件中使用-vuex\"><a class=\"header-anchor\" href=\"#在-js-文件中使用-vuex\" aria-hidden=\"true\">#</a> 在 js 文件中使用 vuex:</h3>\n<p>使用方式是一样的，只是调用的\b名字，稍微有些改变。</p>\n<p><strong>重复引用问题：</strong></p>\n<p>现在项目中基本使用的都是Webpack打包，所以我们不用担心重复引用的问题。</p>\n<p>webpack会记忆你之前有没有引用过这个文件/包，整个项目只会引用一次。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// some.js</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 引入vuex</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vuex的数据'</span><span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nameAction'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'传过去的新名字'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"小结\"><a class=\"header-anchor\" href=\"#小结\" aria-hidden=\"true\">#</a> 小结</h3>\n<p>实际上使用 Vuex 只需要<code>store.js</code>文件,然后再把文件引到<code>main.js</code>入门文件中，挂在<code>new Vue</code>的配置项中即可使用。</p>\n<p>如此之简单，快点来试试吧！\n<!-- 特殊字符串：用于修改/删除markdown的结尾提示语-OBKoro1 --></p>\n<h3 id=\"点个star支持我一下\"><a class=\"header-anchor\" href=\"#点个star支持我一下\" aria-hidden=\"true\">#</a> 点个<a href=\"https://github.com/OBKoro1/codeBlack\" target=\"_blank\" rel=\"noopener noreferrer\">Star<OutboundLink/></a>支持我一下~</h3>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n<!-- more -->\n<comment-comment/>\n</div>\n",null]}