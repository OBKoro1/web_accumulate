{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/无重复字符的最长子串.md?vue&type=template&id=89fb22fe&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/无重复字符的最长子串.md","mtime":1636107879477},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"无重复字符的最长子串\"><a class=\"header-anchor\" href=\"#无重复字符的最长子串\" aria-hidden=\"true\">#</a> 无重复字符的最长子串</h2>\n<h3 id=\"难度：中等\"><a class=\"header-anchor\" href=\"#难度：中等\" aria-hidden=\"true\">#</a> 难度：中等</h3>\n<h3 id=\"描述：\"><a class=\"header-anchor\" href=\"#描述：\" aria-hidden=\"true\">#</a> 描述：</h3>\n<p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</p>\n<h3 id=\"样例：\"><a class=\"header-anchor\" href=\"#样例：\" aria-hidden=\"true\">#</a> 样例：</h3>\n<ul>\n<li>输入: &quot;abcabcbb&quot;</li>\n</ul>\n<p>输出: 3</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</p>\n<ul>\n<li>输入: &quot;bbbbb&quot;</li>\n</ul>\n<p>输出: 1</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</p>\n<ul>\n<li>输入: &quot;pwwkew&quot;</li>\n</ul>\n<p>输出: 3</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</p>\n<ul>\n<li>输入: &quot;dvdf&quot;</li>\n</ul>\n<p>输出: 3</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;vdf&quot;，所以其长度为 3。</p>\n<ul>\n<li>输入: &quot;asjrgapa&quot;</li>\n</ul>\n<p>输出: 6</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;sjrgap&quot;，所以其长度为 6。</p>\n<ul>\n<li>输入: &quot;aabaab!bb&quot;</li>\n</ul>\n<p>输出: 3</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;ab!&quot;，所以其长度为 3。</p>\n<ul>\n<li>输入: &quot;abcb&quot;</li>\n</ul>\n<p>输出: 3</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</p>\n<ul>\n<li>输入: &quot;asljlj&quot;</li>\n</ul>\n<p>输出: 4</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;aslj&quot;，所以其长度为 4。</p>\n<ul>\n<li>输入: &quot;qwnfenpglqdq&quot;</li>\n</ul>\n<p>输出: 8</p>\n<p>解释: 因为无重复字符的最长子串是 &quot;fenpglqd&quot;，所以其长度为 8。</p>\n<h3 id=\"思路分析：\"><a class=\"header-anchor\" href=\"#思路分析：\" aria-hidden=\"true\">#</a> 思路分析：</h3>\n<p>关键在于在出现重复字符时，如何更新不重复字符的index</p>\n<h3 id=\"代码模板：\"><a class=\"header-anchor\" href=\"#代码模板：\" aria-hidden=\"true\">#</a> 代码模板：</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">/**\n * @param {string} s\n * @return {number}\n */</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">lengthOfLongestSubstring</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"想\"><a class=\"header-anchor\" href=\"#想\" aria-hidden=\"true\">#</a> 想</h3>\n<h3 id=\"一\"><a class=\"header-anchor\" href=\"#一\" aria-hidden=\"true\">#</a> 一</h3>\n<h3 id=\"想-2\"><a class=\"header-anchor\" href=\"#想-2\" aria-hidden=\"true\">#</a> 想</h3>\n<h3 id=\"再\"><a class=\"header-anchor\" href=\"#再\" aria-hidden=\"true\">#</a> 再</h3>\n<h3 id=\"看\"><a class=\"header-anchor\" href=\"#看\" aria-hidden=\"true\">#</a> 看</h3>\n<h3 id=\"答\"><a class=\"header-anchor\" href=\"#答\" aria-hidden=\"true\">#</a> 答</h3>\n<h3 id=\"案\"><a class=\"header-anchor\" href=\"#案\" aria-hidden=\"true\">#</a> 案</h3>\n<h3 id=\"代码：\"><a class=\"header-anchor\" href=\"#代码：\" aria-hidden=\"true\">#</a> 代码：</h3>\n<ol>\n<li>用对象储存字符的位置, 出现重复字符时更新不重复字符的index。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">lengthOfLongestSubstring</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用于储存字符出现的位置</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最大值</span>\n    <span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不重复字符的index</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 当前值是否在对象中存储过</span>\n        <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">!==</span> undefined<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 更新上一次重复值的index</span>\n            <span class=\"token comment\">// value + 1 跳过之前重复的字符</span>\n            <span class=\"token comment\">// j: 之前不重复的index 重复字符 需要全部跳过</span>\n            j <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 每个字符都计算一下最长不重复值 保存最大值</span>\n        <span class=\"token comment\">// 不重复最长长度 = 当前index - 上一次重复值的index + index从0开始 长度从1开始</span>\n        res <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 存/更新 字符串index</span>\n        obj<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>从左到右，一个字符一个字符搜索，看是否重复。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">lengthOfLongestSubstring</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不重复字符的index</span>\n        res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新无重复字符的长度</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 查找：不重复字符-当前index之间 有没有出现当前字符</span>\n        <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 更新无重复字符的长度：当前index-不重复字符的index + 长度从1开始算</span>\n            res <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> j <span class=\"token operator\">-</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 更新i = 不重复字符的index</span>\n            <span class=\"token comment\">// 不重复字符的index = 原不重复的字符index + i-j中出现重复字符的index + 跳过该重复字符</span>\n            i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br></div><!--beforeend--></div><!--afterend--><!-- 特殊字符串：用于修改/删除markdown的结尾提示语-OBKoro1 -->\n<h3 id=\"点个star支持我一下\"><a class=\"header-anchor\" href=\"#点个star支持我一下\" aria-hidden=\"true\">#</a> 点个<a href=\"https://github.com/OBKoro1/Brush_algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">Star<OutboundLink/></a>支持我一下~</h3>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n<!-- more -->\n<comment-comment/>\n</div>\n",null]}