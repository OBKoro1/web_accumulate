{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/前端弹幕效果实现思路.md?vue&type=template&id=7f721b40&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/前端弹幕效果实现思路.md","mtime":1636107879469},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"前端弹幕效果实现思路\"><a class=\"header-anchor\" href=\"#前端弹幕效果实现思路\" aria-hidden=\"true\">#</a> 前端弹幕效果实现思路</h2>\n<p>这是几个月前写的<a href=\"https://juejin.im/post/5ae56927f265da0b7e0c0968\" target=\"_blank\" rel=\"noopener noreferrer\">文章<OutboundLink/></a>，文章下面有很多精彩的讨论，或许能给你一点启发</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">更好的方式</p>\n<p>可以利用<code>canvas</code>或者 CSS 动画来实现弹幕需求，不过文章中的思路，可以参考一下。</p>\n</div>\n<hr>\n<h2 id=\"实现效果：\"><a class=\"header-anchor\" href=\"#实现效果：\" aria-hidden=\"true\">#</a> 实现效果：</h2>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1631066f5f7cbcd4?raw=true\" alt=\"\"></p>\n<h2 id=\"实现原理：\"><a class=\"header-anchor\" href=\"#实现原理：\" aria-hidden=\"true\">#</a> 实现原理：</h2>\n<p>实现弹幕的原理，并不算太复杂，耗费一些时间，怼一怼应该都可以做出来。</p>\n<ol>\n<li>获取弹幕数据。</li>\n<li>将弹幕设置为四个通道，每个通道最多只能出现两条弹幕。</li>\n<li>使用<code>setInterval</code>动态设置<code>dom</code>的<code>left</code>属性。</li>\n<li>使用 dom 的<code>offsetWidth</code>和屏幕的宽度判断元素是否滚动超出屏幕，然后移除 dom。</li>\n</ol>\n<hr>\n<h2 id=\"实现步骤：\"><a class=\"header-anchor\" href=\"#实现步骤：\" aria-hidden=\"true\">#</a> 实现步骤：</h2>\n<h3 id=\"_1-首先看一下html的结构。\"><a class=\"header-anchor\" href=\"#_1-首先看一下html的结构。\" aria-hidden=\"true\">#</a> 1. 首先看一下<code>html</code>的结构。</h3>\n<!--beforebegin--><div class=\"language-html line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>detailImg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>barrageDiv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>barrageLayer1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>barrageLayer2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>barrageLayer3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>barrageLayer4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--detailImg 设置relative， barrageDiv设置z-index在图片上面，以及图片的位置--></span>\n<span class=\"token comment\">&lt;!-- barrageLayer1~4 主要设置了一个top属性让四个div在各自的水平线上，形成四个通道--></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><p>关于这里的 css 样式，关键点都在上面说了，就注意一下上面通道是怎样形成的，就可以了。具体的样式也就不贴出来了，就根据各自的需求来吧。</p>\n<h3 id=\"_2-获取弹幕所需要的数据。\"><a class=\"header-anchor\" href=\"#_2-获取弹幕所需要的数据。\" aria-hidden=\"true\">#</a> 2.获取弹幕所需要的数据。</h3>\n<p>要实现弹幕效果肯定需要有数据，这里就是发请求了。</p>\n<p>获取数据时，<strong>要考虑数据量，一次不可能全部都获取</strong>，可以一次获取一部分，当数据要加载完的时候，再次请求数据。</p>\n<p>这里要<strong>记录数据数据是否全部请求完成</strong>，如果请求完成，就可以不再发送数据，直接用之前获取的全部数据就可以了。</p>\n<h3 id=\"_3-执行弹幕的函数。\"><a class=\"header-anchor\" href=\"#_3-执行弹幕的函数。\" aria-hidden=\"true\">#</a> 3.执行弹幕的函数。</h3>\n<p>弹幕数据获取后，就执行弹幕运行的函数，因为我在写弹幕函数的时候，设置了很多数据状态，这里就大概讲一下实现思路和关键部分代码。</p>\n<h4 id=\"弹幕函数包括的功能：\"><a class=\"header-anchor\" href=\"#弹幕函数包括的功能：\" aria-hidden=\"true\">#</a> 弹幕函数包括的功能：</h4>\n<ol>\n<li>定时获取数据(判断数据是否加载完毕)</li>\n<li>定时发射弹幕(判断通道是否闲置),传入弹幕所需要的内容，用户头像等。</li>\n<li>创建 dom 内容，根据传参生成弹幕 div，设置 style 属性，根据控制弹幕数据数组的下标将 div 插入对应的 dom 中。</li>\n<li>采用定时器移动 dom，这里是根据内容长度定义弹幕的移动速度。</li>\n<li>移动弹幕的过程中判断四个通道是否处于闲置状态，当 dom 移动出了屏幕，移动 dom 并且清除定时器。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">barrage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//第一部分先判断数据是否加载完成 这里是一个定时器，设置为15秒。</span>\n    <span class=\"token comment\">//如果数据还未加载完毕，就再次运行请求数据的接口，请求的页数可以 数组/每次请求的条数+1</span>\n    <span class=\"token comment\">//数据加载完毕就清除定时器。（我将定时器都保存在vue 组件的data里面） 清除的时候clearInterval(this.data);</span>\n\n    <span class=\"token comment\">//定时发射</span>\n        _this<span class=\"token punctuation\">.</span>barrageStatus<span class=\"token punctuation\">.</span>divStatus<span class=\"token punctuation\">.</span>intervalid<span class=\"token operator\">=</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span> selfTime<span class=\"token punctuation\">,</span><span class=\"token number\">1100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">selfTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>dataNum<span class=\"token operator\">>=</span>_this<span class=\"token punctuation\">.</span>barrageStatus<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//当dataNum大于等于数组的数量时，弹幕从头再来一遍</span>\n            _this<span class=\"token punctuation\">.</span>dataNum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//设置四个通道的变量，当这几个变量为false的时候，才可发射</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>divStatus<span class=\"token punctuation\">.</span>div1<span class=\"token operator\">===</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//这里只演示其中一个变量</span>\n        divStatus<span class=\"token punctuation\">.</span>div1<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        _this<span class=\"token punctuation\">.</span>dataNum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">barrageOut</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>barrageStatus<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>_this<span class=\"token punctuation\">.</span>dataNum<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>barrageStatus<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>_this<span class=\"token punctuation\">.</span>dataNum<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>commentator<span class=\"token punctuation\">.</span>headImgUrl<span class=\"token punctuation\">,</span>_this<span class=\"token punctuation\">.</span>dataNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 创建弹幕内容，自定义弹幕移动速度</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">barrageOut</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span>imgUrl<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//text：弹幕的内容,imgUrl:用户的头像,num:数组的第几个</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//根据数组下标 创建对应通道的节点 这里也演示其中一个</span>\n        barrageLayer<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'barrageLayer1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 创建dom内容 定义dom style样式</span>\n    <span class=\"token keyword\">let</span> divBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> divBoxImg<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> divBoxText<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    divBox<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'barrageDivClass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    divBoxText<span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span>text<span class=\"token punctuation\">;</span>\n    divBox<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>divBoxImg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    divBoxImg<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'barrageDivClass_img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    divBoxImg<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundImage<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token string\">`url(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>imgUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)`</span></span><span class=\"token punctuation\">;</span>\n    divBox<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>divBoxText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    divBox<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientWidth<span class=\"token operator\">+</span><span class=\"token number\">2000</span><span class=\"token operator\">+</span><span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 初始化left位置,一开始在屏幕的右侧</span>\n    barrageLayer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>divBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 定时器移动dom，形成弹幕</span>\n    <span class=\"token keyword\">let</span> time<span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    time<span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>length<span class=\"token operator\">&lt;</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 这里可以根据需求自定义弹幕加载的速度</span>\n        l<span class=\"token operator\">=</span>l<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        l<span class=\"token operator\">=</span>l<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//通过减少left属性移动这个div 从右往左移动</span>\n        divBox<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientWidth<span class=\"token operator\">+</span>l<span class=\"token operator\">+</span><span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">delDiv</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//在移动弹幕的过程中判断四个通道是否处于闲置状态 这里只演示其中一个</span>\n                barrageLayer<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'barrageLayer1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>barrageLayer<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span>length<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//判断弹幕数量，如果小于2，设为false，上面的定时器可以继续发射弹幕</span>\n                divStatus<span class=\"token punctuation\">.</span>div1<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                divStatus<span class=\"token punctuation\">.</span>div1<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> l <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>divBox<span class=\"token punctuation\">.</span>offsetWidth<span class=\"token operator\">-</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>barrageStatus<span class=\"token punctuation\">.</span>divStatus<span class=\"token punctuation\">.</span><span class=\"token keyword\">switch</span><span class=\"token operator\">==</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//弹幕开关</span>\n            <span class=\"token function\">delDiv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>divBox<span class=\"token punctuation\">.</span>offsetWidth<span class=\"token operator\">-</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//不断减少left属性，当小于这个内容的宽度,并且滚了120的时候</span>\n                barrageLayer<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>divBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//移除dom</span>\n                <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//清除这个div的定时器</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//清除这个div的定时器</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br><span class=\"line-number\">33</span><br><span class=\"line-number\">34</span><br><span class=\"line-number\">35</span><br><span class=\"line-number\">36</span><br><span class=\"line-number\">37</span><br><span class=\"line-number\">38</span><br><span class=\"line-number\">39</span><br><span class=\"line-number\">40</span><br><span class=\"line-number\">41</span><br><span class=\"line-number\">42</span><br><span class=\"line-number\">43</span><br><span class=\"line-number\">44</span><br><span class=\"line-number\">45</span><br><span class=\"line-number\">46</span><br><span class=\"line-number\">47</span><br><span class=\"line-number\">48</span><br><span class=\"line-number\">49</span><br><span class=\"line-number\">50</span><br><span class=\"line-number\">51</span><br><span class=\"line-number\">52</span><br><span class=\"line-number\">53</span><br><span class=\"line-number\">54</span><br><span class=\"line-number\">55</span><br><span class=\"line-number\">56</span><br><span class=\"line-number\">57</span><br><span class=\"line-number\">58</span><br><span class=\"line-number\">59</span><br><span class=\"line-number\">60</span><br><span class=\"line-number\">61</span><br><span class=\"line-number\">62</span><br><span class=\"line-number\">63</span><br><span class=\"line-number\">64</span><br><span class=\"line-number\">65</span><br><span class=\"line-number\">66</span><br><span class=\"line-number\">67</span><br><span class=\"line-number\">68</span><br><span class=\"line-number\">69</span><br><span class=\"line-number\">70</span><br><span class=\"line-number\">71</span><br><span class=\"line-number\">72</span><br><span class=\"line-number\">73</span><br><span class=\"line-number\">74</span><br><span class=\"line-number\">75</span><br><span class=\"line-number\">76</span><br><span class=\"line-number\">77</span><br><span class=\"line-number\">78</span><br><span class=\"line-number\">79</span><br><span class=\"line-number\">80</span><br><span class=\"line-number\">81</span><br><span class=\"line-number\">82</span><br></div><!--beforeend--></div><!--afterend--><!-- 特殊字符串：用于修改/删除markdown的结尾提示语-OBKoro1 -->\n<h3 id=\"点个star支持我一下\"><a class=\"header-anchor\" href=\"#点个star支持我一下\" aria-hidden=\"true\">#</a> 点个<a href=\"https://github.com/OBKoro1/web_accumulate\" target=\"_blank\" rel=\"noopener noreferrer\">Star<OutboundLink/></a>支持我一下~</h3>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n<!-- more -->\n<comment-comment/>\n</div>\n",null]}