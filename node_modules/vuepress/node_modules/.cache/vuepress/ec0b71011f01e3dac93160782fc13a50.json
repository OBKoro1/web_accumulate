{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/浏览器桌面通知.md?vue&type=template&id=f1c21e28&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/effect/浏览器桌面通知.md","mtime":1636107879469},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"h5-notification浏览器桌面通知\"><a class=\"header-anchor\" href=\"#h5-notification浏览器桌面通知\" aria-hidden=\"true\">#</a> H5 notification浏览器桌面通知</h2>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1g0brdnk332j30xc0dwjtz.jpg?raw=true\" alt=\"\"></p>\n<p><code>Notification</code>是HTML5新增的API，用于向用户配置和显示桌面通知。上次在别的网站上看到别人的通知弹窗，好奇之余也想知道如何实现的。实际去查一下发现并不复杂，且可以说比较简单，故写篇博客分享给大家,希望能帮你们了解这个API。</p>\n<h3 id=\"npm包：\"><a class=\"header-anchor\" href=\"#npm包：\" aria-hidden=\"true\">#</a> npm包：</h3>\n<p>我还发了一个npm包:<a href=\"https://github.com/OBKoro1/notification-Koro1\" target=\"_blank\" rel=\"noopener noreferrer\">notification-Koro1<OutboundLink/></a>，非常轻量简洁，觉得不错的话，点个Star吧~</p>\n<h3 id=\"chrome下notification的表现：\"><a class=\"header-anchor\" href=\"#chrome下notification的表现：\" aria-hidden=\"true\">#</a> chrome下<code>Notification</code>的表现：</h3>\n<ol>\n<li>以谷歌为例，一开始需要用户允许通知：</li>\n</ol>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1fzskpfbfmbj30hs078q36.jpg?raw=true\" alt=\"\"></p>\n<ol start=\"2\">\n<li>允许通知之后，显示的通知长这样：</li>\n</ol>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1fzyaxnnc25j30kg03wjrs.jpg?raw=true\" alt=\"\"></p>\n<h3 id=\"notification特性\"><a class=\"header-anchor\" href=\"#notification特性\" aria-hidden=\"true\">#</a> <code>Notification</code>特性</h3>\n<ol>\n<li>\n<p><strong>该通知是脱离浏览器的，即使用户没有停留在当前标签页，甚至最小化了浏览器，也会在主屏幕的右上角显示通知，然后在一段时间后消失</strong>。</p>\n</li>\n<li>\n<p><strong>我们可以监听通知的显示，点击，关闭等事件</strong>,比如点击通知打开一个页面。</p>\n</li>\n</ol>\n<blockquote>\n<p><a href=\"http://obkoro1.com/\" target=\"_blank\" rel=\"noopener noreferrer\">博客<OutboundLink/></a>、<a href=\"http://obkoro1.com/web_accumulate/accumulate/\" target=\"_blank\" rel=\"noopener noreferrer\">前端积累文档<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1631b6f52f7e7015.jpeg?raw=true\" target=\"_blank\" rel=\"noopener noreferrer\">公众号<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub<OutboundLink/></a></p>\n</blockquote>\n<h3 id=\"栗子：去各个网站里面的控制台去运行\"><a class=\"header-anchor\" href=\"#栗子：去各个网站里面的控制台去运行\" aria-hidden=\"true\">#</a> 栗子：去各个网站里面的控制台去运行</h3>\n<p>API的具体细节，等下再说，先试试这个API~</p>\n<p>下面是一个简单的栗子，大家<strong>可以先在各个网站的控制台里面运行查看<code>Notification</code>的效果</strong>：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  dir<span class=\"token punctuation\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文字方向</span>\n  body<span class=\"token punctuation\">:</span> <span class=\"token string\">\"通知：OBKoro1评论了你的朋友圈\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 通知主体</span>\n  requireInteraction<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不自动关闭通知</span>\n  <span class=\"token comment\">// 通知图标 </span>\n  icon<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://upload-images.jianshu.io/upload_images/5245297-818e624b75271127.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">notifyMe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是通知的标题'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">notifyMe</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先检查浏览器是否支持</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Notification<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'浏览器不支持通知'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 检查用户曾经是否同意接受通知</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> notification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 显示通知</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 用户还未选择，可以询问用户是否同意发送通知</span>\n      Notification<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>permission <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户同意授权'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> notification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 显示通知</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户关闭授权 未刷新页面之前 可以再次请求授权'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// denied</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户拒绝授权 不能显示通知'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// denied 用户拒绝</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户曾经拒绝显示通知'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br><span class=\"line-number\">33</span><br><span class=\"line-number\">34</span><br><span class=\"line-number\">35</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"浏览器支持：\"><a class=\"header-anchor\" href=\"#浏览器支持：\" aria-hidden=\"true\">#</a> 浏览器支持：</h3>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/notification#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7\" target=\"_blank\" rel=\"noopener noreferrer\">MDN<OutboundLink/></a>：目前<code>Notification</code>除了IE浏览器不支持外, 其他浏览器都已支持桌面通知，移动端浏览器基本都未支持。</p>\n<p>因为兼容性问题，所以在使用<code>Notification</code>之前，我们需要查看浏览器是否支持<code>Notification</code>这个API：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>Notification<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 桌面通知的逻辑</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"通知权限：\"><a class=\"header-anchor\" href=\"#通知权限：\" aria-hidden=\"true\">#</a> 通知权限：</h3>\n<p>为了避免网站滥用通知扰民，在向用户显示通知之前，需要经过用户同意。</p>\n<p><code>Notification.permission</code> <strong>用于表明当前通知显示的授权状态</strong>,它有三个值：</p>\n<ol>\n<li><code>default</code>: 默认值，用户还未选择</li>\n<li><code>granted</code>: 用户允许该网站发送通知</li>\n<li><code>denied</code>: 用户拒绝该网站发送通知</li>\n</ol>\n<h3 id=\"检测权限：\"><a class=\"header-anchor\" href=\"#检测权限：\" aria-hidden=\"true\">#</a> 检测权限：</h3>\n<p>检测浏览器是否支持<code>Notification</code>之后，需要检测一下用户通知权限。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户曾经同意授权'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">// 随时可以显示通知</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户还未选择同意/拒绝'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 下一步请求用户授权</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户曾经拒绝授权 不能显示通知'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"请求权限\"><a class=\"header-anchor\" href=\"#请求权限\" aria-hidden=\"true\">#</a> 请求权限</h3>\n<p>当<code>Notification.permission</code>为<code>default</code>的时候，我们需要使用<code>Notification.requestPermission()</code>来请求用户权限。</p>\n<p><code>Notification.requestPermission()</code>基于promise语法，then的回调函数参数是用户权限的状态<code>Notification.permission</code>的值。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>Notification<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>permission <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户同意授权'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">// 随时可以显示通知</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户关闭授权 可以再次请求授权'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'用户拒绝授权 不能显示通知'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 老版本使用的是回调函数机制：Notification.requestPermission(callback); 参数一样</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"推送通知\"><a class=\"header-anchor\" href=\"#推送通知\" aria-hidden=\"true\">#</a> 推送通知</h3>\n<p>当<code>Notification.permission</code>为<code>granted</code>时，请求到用户权限之后，不必立即发送通知，可以在任意时刻，以任意形式来发送通知。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传空配置</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'这里是标题'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> notification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 显示通知</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><blockquote>\n<p>上面这段代码就可以显示一个简单的通知了，只要用户允许你弹窗。</p>\n</blockquote>\n<h3 id=\"notification的参数：\"><a class=\"header-anchor\" href=\"#notification的参数：\" aria-hidden=\"true\">#</a> <code>Notification</code>的参数：</h3>\n<ul>\n<li>title：通知的标题</li>\n<li>options：通知的设置选项（可选）。\n<ul>\n<li>body：字符串。通知的body内容。</li>\n<li>tag：代表通知的一个识别标签，<strong>相同tag时只会打开一个通知窗口</strong>。</li>\n<li>icon：字符串。要在通知中显示的图标的URL。</li>\n<li>data：想要和通知关联的数据,可以在<code>new Notification</code>返回的实例中找到。</li>\n<li>renotify: 布尔值。相同tag，新通知出现的时候是否替换之前的(开启此项，tag必须设置)。</li>\n<li>requireInteraction：布尔值。通知不自动关闭，默认为false(自动关闭)。</li>\n<li>还有一些不太重要的配置可以看<a href=\"https://www.zhangxinxu.com/wordpress/2016/07/know-html5-web-notification/\" target=\"_blank\" rel=\"noopener noreferrer\">张鑫旭老师的博客<OutboundLink/></a>和<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/notification\" target=\"_blank\" rel=\"noopener noreferrer\">MDN<OutboundLink/></a>的介绍</li>\n</ul>\n</li>\n</ul>\n<p><strong>requireInteraction</strong>: 保持通知不自动关闭</p>\n<p>默认值为false，通知会在三四秒之后自动关闭。</p>\n<p>当设置为<code>true</code>,并且当有超过两个通知(<code>new Notification(title, options)</code>)时，会出现如下图的通知叠加状态。</p>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1fzyy3ykl2gj30jy0kc772.jpg?raw=true\" alt=\"\"></p>\n<p>这种情况显然，我们只能默认操作最后一个通知，除非你把每个通知返回的实例都保存下来。</p>\n<p>我发布的npm包：<a href=\"https://github.com/OBKoro1/notification-Koro1\" target=\"_blank\" rel=\"noopener noreferrer\">notification-koro1<OutboundLink/></a>，可以<strong>自定义一定的时间间隔自动关闭不自动关闭的通知，也可以一次性关闭所有通知</strong></p>\n<p>PS：如果没有触发叠加，很可能是因为你两次通知的tag配置项是相同的(相同tag只能出现一个弹窗)。</p>\n<p>PS:  safari下不支持该选项,默认自动关闭</p>\n<p><strong>renotify</strong>：相同</p>\n<p>默认值为false，chorme下相同tag的通知不替换，还是老的通知</p>\n<p>设置为<code>true</code>, 两个相同tag的通知，新通知替换之前旧的通知。</p>\n<p><strong>注意</strong>：使用<code>renotify</code>，<strong>必须要同时设置<code>tag</code>选项，否则将会报错</strong>。</p>\n<p>PS： safari下不支持该选项，默认两个相同tag的通知，新通知替换之前旧的通知。</p>\n<h2 id=\"notification的实例：\"><a class=\"header-anchor\" href=\"#notification的实例：\" aria-hidden=\"true\">#</a> <code>Notification</code>的实例：</h2>\n<p>生成通知，会返回一个实例，如下：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> instanceNotification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p><code>instanceNotification</code>就是当前通知的实例，在该实例上，我们可以<strong>查询该通知的配置，监听事件，调用实例方法</strong>。</p>\n<p>下文都以<code>instanceNotification</code>指代通知返回的实例。</p>\n<h3 id=\"通知的配置：\"><a class=\"header-anchor\" href=\"#通知的配置：\" aria-hidden=\"true\">#</a> 通知的配置：</h3>\n<p><strong>在通知实例上可以读取到设置通知时的所有配置</strong>，比如：</p>\n<p>通知标题：<code>instanceNotification. title</code>、通知内容：<code>instanceNotification. body</code>、通知图标：<code>instanceNotification. icon</code>等。</p>\n<p>PS： 这些属性都是只读的，不能删除，不能修改，不能遍历。</p>\n<h3 id=\"事件处理：\"><a class=\"header-anchor\" href=\"#事件处理：\" aria-hidden=\"true\">#</a> 事件处理：</h3>\n<p>我们可以使用通知的实例来监听通知的事件：</p>\n<ul>\n<li><code>click</code>: 用户点击通知时被触发</li>\n<li><code>show</code>: 通知显示的时候被触发</li>\n<li><code>error</code>: 通知遇到错误时被触发</li>\n<li><code>close</code>: 用户关闭通知时被触发</li>\n</ul>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>instanceNotification<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something 可以是：打开网址，发请求，关闭通知等</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><p><strong>注意</strong>：最好是一发出通知就立即监听事件，否则有些事件可能一开始没被触发或永远不会触发。</p>\n<p>例如：用定时器5秒后才监听通知的点击和显示事件，则永远不会触发通知显示的回调，点击事件在5秒后才可以正常起作用但会错误五秒之前用户的点击。</p>\n<h3 id=\"关闭通知\"><a class=\"header-anchor\" href=\"#关闭通知\" aria-hidden=\"true\">#</a> 关闭通知</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>instanceNotification<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>没有设置不自动关闭的话，chrome通知将会在4.5秒左右自动关闭通知，safari则是5秒钟(无法设置不自动关闭)。</p>\n<p>notification没有定时控制通知多久后消失的功能，当出现多个通知，也无法统一关闭。</p>\n<p>这两个问题，在我发布的NPM包：<a href=\"https://github.com/OBKoro1/notification-Koro1\" target=\"_blank\" rel=\"noopener noreferrer\">notification-koro1<OutboundLink/></a>中，都解决掉了，并提供更清晰的回调</p>\n<h3 id=\"应用场景\"><a class=\"header-anchor\" href=\"#应用场景\" aria-hidden=\"true\">#</a> 应用场景</h3>\n<ul>\n<li>即时通讯软件(邮件、聊天室)</li>\n<li>体育赛事结果彩票/抽奖结果</li>\n<li>新闻网站重大新闻通知</li>\n<li>网站的重大更新，重大新闻等。</li>\n</ul>\n<h2 id=\"notification其他\"><a class=\"header-anchor\" href=\"#notification其他\" aria-hidden=\"true\">#</a> notification其他</h2>\n<p>这里是一些API/浏览器细节，以及可能会遇到的问题，可以先不看，等真正遇到了，回头再来看。</p>\n<h3 id=\"用户拒绝显示通知：\"><a class=\"header-anchor\" href=\"#用户拒绝显示通知：\" aria-hidden=\"true\">#</a> 用户拒绝显示通知：</h3>\n<p>一旦用户禁止网站显示通知，网站就不能再请求用户授权显示通知，需要用户去设置中更改。</p>\n<p>chrome浏览器的通知设置位置：设置&gt;高级&gt;内容设置&gt;通知</p>\n<p>saafari浏览器：偏好设置&gt;网站&gt;通知&gt;找到网站&gt;修改权限/恢复默认</p>\n<h3 id=\"关闭请求权限：\"><a class=\"header-anchor\" href=\"#关闭请求权限：\" aria-hidden=\"true\">#</a> 关闭请求权限：</h3>\n<p>在chorme浏览器中：当用户关闭请求权限的弹窗(右上角的叉叉)，页面还没刷新，我们可以再次向用户请求权限。<strong>页面刷新过后，浏览器默认用户拒绝</strong>。</p>\n<p>在safari浏览器下，没有关闭请求权限的选项，用户必须选择同意/拒绝。</p>\n<h3 id=\"icon不显示问题：\"><a class=\"header-anchor\" href=\"#icon不显示问题：\" aria-hidden=\"true\">#</a> icon不显示问题：</h3>\n<p>可能是网站进行了同源限制(比如github)，不是域名下面的图片，会报错，不能调用。</p>\n<h3 id=\"tag：\"><a class=\"header-anchor\" href=\"#tag：\" aria-hidden=\"true\">#</a> tag：</h3>\n<ol>\n<li><code>tag</code>相同的通知，同时只能出现一个，老通知是否会被覆盖取决于：<code>renotify</code>配置和浏览器。</li>\n<li>chrome下：当通知关闭之后，<strong>上次出现过的tag在一段时间内，不能再出现</strong>，比如刷新页面再请求相同tag的通知。（在safari下正常出现）</li>\n</ol>\n<h3 id=\"safari下面不能显示icon\"><a class=\"header-anchor\" href=\"#safari下面不能显示icon\" aria-hidden=\"true\">#</a> safari下面不能显示icon</h3>\n<p>在safari下面，同一个网站(比如谷歌)，同样的代码，chorme可以正常显示icon，safari却没有icon，也没有报错。</p>\n<p>谷歌之后发现,在<a href=\"https://stackoverflow.com/questions/20949203/i-dont-see-the-icon-in-my-web-notification-in-safari\" target=\"_blank\" rel=\"noopener noreferrer\">stack overflow<OutboundLink/></a>里面看到<strong>safari只支持body和tag选项,并不支持icon选项</strong>。</p>\n<h3 id=\"连续触发\"><a class=\"header-anchor\" href=\"#连续触发\" aria-hidden=\"true\">#</a> 连续触发</h3>\n<p>在safari和chrome下短时间内连续触发通知(不设<code>tag</code>，不设<code>requireInteraction</code>)，会出现如下表现：</p>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1g05d2z0zxej30je03wwep.jpg?raw=true\" alt=\"notification 连续触发\"></p>\n<p>这个表现，<strong>通知没有icon、标题、内容，就显得没有意义了</strong>，浏览器以这种形式，限制开发者不要频繁打扰用户。</p>\n<h3 id=\"notification-koro1：\"><a class=\"header-anchor\" href=\"#notification-koro1：\" aria-hidden=\"true\">#</a> notification-Koro1：</h3>\n<p>试一下<a href=\"https://github.com/OBKoro1/notification-Koro1\" target=\"_blank\" rel=\"noopener noreferrer\">notification-Koro1<OutboundLink/></a>啦, 持续维护，简单方便~</p>\n<hr>\n<h2 id=\"结语\"><a class=\"header-anchor\" href=\"#结语\" aria-hidden=\"true\">#</a> 结语</h2>\n<p>本文写的比较细，可以先mark一下，然后以后真正用到这个API了，可以先通过文中的栗子，然后再查找对应的内容。</p>\n<p>还有就是注意浏览器间的差异，我自己就试了chrome和safari，然后这两个浏览器在实现细节上有很多不一样的地方，开发的时候注意一下。</p>\n<p><a href=\"http://obkoro1.com/\" target=\"_blank\" rel=\"noopener noreferrer\">博客<OutboundLink/></a>、<a href=\"http://obkoro1.com/web_accumulate/accumulate/\" target=\"_blank\" rel=\"noopener noreferrer\">前端积累文档<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1631b6f52f7e7015.jpeg?raw=true\" target=\"_blank\" rel=\"noopener noreferrer\">公众号<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub<OutboundLink/></a></p>\n<p>参考资料：</p>\n<p><a href=\"https://github.com/OBKoro1/notification-Koro1\" target=\"_blank\" rel=\"noopener noreferrer\">notification-Koro1<OutboundLink/></a></p>\n<p><a href=\"https://www.zhangxinxu.com/wordpress/2016/07/know-html5-web-notification/\" target=\"_blank\" rel=\"noopener noreferrer\">简单了解HTML5中的Web Notification桌面通知<OutboundLink/></a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/notification\" target=\"_blank\" rel=\"noopener noreferrer\">Notification MDN<OutboundLink/></a></p>\n<p><a href=\"https://juejin.im/post/59ed37f5f265da431e15eaac\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5 桌面通知：Notification API<OutboundLink/></a>\n<!-- 特殊字符串：用于修改/删除markdown的结尾提示语-OBKoro1 --></p>\n<h3 id=\"点个star支持我一下\"><a class=\"header-anchor\" href=\"#点个star支持我一下\" aria-hidden=\"true\">#</a> 点个<a href=\"https://github.com/OBKoro1/web_accumulate\" target=\"_blank\" rel=\"noopener noreferrer\">Star<OutboundLink/></a>支持我一下~</h3>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n<!-- more -->\n<comment-comment/>\n</div>\n",null]}