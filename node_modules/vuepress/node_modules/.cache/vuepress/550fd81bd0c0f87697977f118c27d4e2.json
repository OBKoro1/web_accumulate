{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/摆动序列.md?vue&type=template&id=57e271cf&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/medium/摆动序列.md","mtime":1636107879477},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"摆动序列\\\"><a href=\\\"#摆动序列\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 摆动序列</h2> <h3 id=\\\"难度：中等\\\"><a href=\\\"#难度：中等\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：中等</h3> <h3 id=\\\"摆动序列-2\\\"><a href=\\\"#摆动序列-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 摆动序列</h3> <blockquote><p>如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为摆动序列。第一个差（如果存在的话）可能是正数或负数。少于两个元素的序列也是摆动序列。</p></blockquote> <p>例如， <code>[1,7,4,9,2,5]</code> 是一个摆动序列，因为差值 <code>(6,-3,5,-7,3)</code>是正负交替出现的。相反, <code>[1,4,7,2,5]</code> 和 <code>[1,7,4,5,5]</code> 不是摆动序列，第一个序列是因为它的前两个差值都是正数，第二个序列是因为它的最后一个差值为零。</p> <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <p><strong>给定一个整数序列，返回作为摆动序列的最长子序列的长度</strong>。</p> <p>通过从原始序列中删除一些（也可以不删除）元素来获得子序列，剩下的元素保持其原始顺序。</p> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <h4 id=\\\"示例1：\\\"><a href=\\\"#示例1：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 示例1：</h4> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>输入<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span>\\n输出<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">6</span> \\n解释<span class=\\\"token punctuation\\\">:</span> 整个序列均为摆动序列。\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><h4 id=\\\"示例2：\\\"><a href=\\\"#示例2：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 示例2：</h4> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>输入<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">15</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span>\\n输出<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">7</span>\\n解释<span class=\\\"token punctuation\\\">:</span> 这个序列包含几个长度为 <span class=\\\"token number\\\">7</span> 摆动序列，其中一个可为<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span>。\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><h4 id=\\\"示例3：\\\"><a href=\\\"#示例3：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 示例3：</h4> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>输入<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">]</span>\\n输出<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><h3 id=\\\"思路分析：\\\"><a href=\\\"#思路分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 思路分析：</h3> <ol><li>整数序列可以删除</li> <li>序列要不断上升和下降才有效。</li></ol> <h3 id=\\\"代码模板：\\\"><a href=\\\"#代码模板：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码模板：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">wiggleMaxLength</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><h3 id=\\\"想\\\"><a href=\\\"#想\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"一\\\"><a href=\\\"#一\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 一</h3> <h3 id=\\\"想-2\\\"><a href=\\\"#想-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想</h3> <h3 id=\\\"再\\\"><a href=\\\"#再\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 再</h3> <h3 id=\\\"看\\\"><a href=\\\"#看\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 看</h3> <h3 id=\\\"答\\\"><a href=\\\"#答\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 答</h3> <h3 id=\\\"案\\\"><a href=\\\"#案\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 案</h3> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <ol><li>缓存上次的摆动方向, 只关注下一个正确的摆动方向。</li></ol> <blockquote><p>当方向正确序列的长度就可以增加了，中间的连续上升/下降不用管。</p></blockquote> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">wiggleMaxLength</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> nums<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 小于2 直接返回</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">let</span> length <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 默认每个数字为1</span>\\n    <span class=\\\"token keyword\\\">let</span> flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;begin&quot;</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 初始摆动方向</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> nums<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>flag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;begin&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&lt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;up&quot;</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 摆动方向</span>\\n                    length<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 初始两个值为摆动序列</span>\\n                <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&gt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;down&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n                    length<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 初始两个值为摆动序列</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;up&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&gt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token comment\\\">// 找到下一组下一个值比本身小的值</span>\\n                    flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;down&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n                    length<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;down&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&lt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token comment\\\">// 找到下一组下一个值比本身大的值</span>\\n                    flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;up&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n                    length<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> length<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br><span class=\\\"line-number\\\">18</span><br><span class=\\\"line-number\\\">19</span><br><span class=\\\"line-number\\\">20</span><br><span class=\\\"line-number\\\">21</span><br><span class=\\\"line-number\\\">22</span><br><span class=\\\"line-number\\\">23</span><br><span class=\\\"line-number\\\">24</span><br><span class=\\\"line-number\\\">25</span><br><span class=\\\"line-number\\\">26</span><br><span class=\\\"line-number\\\">27</span><br><span class=\\\"line-number\\\">28</span><br><span class=\\\"line-number\\\">29</span><br><span class=\\\"line-number\\\">30</span><br><span class=\\\"line-number\\\">31</span><br><span class=\\\"line-number\\\">32</span><br><span class=\\\"line-number\\\">33</span><br><span class=\\\"line-number\\\">34</span><br><span class=\\\"line-number\\\">35</span><br></div></div><ol start=\\\"2\\\"><li>将上升和下降视为一组，当正确摆动过一次(上升和下降各出现一次)时，序列的长度+1。</li></ol> <blockquote><p>连续摆动因为另一个变量没有变化，所以就会得到相同的结果，相当于跳过。</p></blockquote> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">wiggleMaxLength</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> len <span class=\\\"token operator\\\">=</span> nums<span class=\\\"token punctuation\\\">.</span>length\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>len <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> len <span class=\\\"token comment\\\">// 小于2 返回它本身的长度 大于2的数量 进入比较</span>\\n    <span class=\\\"token keyword\\\">let</span> up <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\n    <span class=\\\"token keyword\\\">let</span> down <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> len<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 当出现连续 下降/上升时，另一个用于阶加的变量没有变化，所以会跳过连续 下降/上升</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&gt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            up <span class=\\\"token operator\\\">=</span> down <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nums<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&lt;</span> nums<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            down <span class=\\\"token operator\\\">=</span> up <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// 取下降和上升的最大值</span>\\n    <span class=\\\"token keyword\\\">return</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>up<span class=\\\"token punctuation\\\">,</span> down<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br></div></div><h3 id=\\\"鼓励我一下：\\\"><a href=\\\"#鼓励我一下：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 鼓励我一下：</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"觉得还不错的话，给我的项目点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"star\"),_c('OutboundLink')],2),_vm._ssrNode(\"吧\\n\")],2),_vm._ssrNode(\" \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}