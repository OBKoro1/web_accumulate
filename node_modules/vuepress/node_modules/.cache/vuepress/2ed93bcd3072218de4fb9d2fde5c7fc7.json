{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/codeBlack/vue小技巧.md?vue&type=template&id=5c242a54&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/codeBlack/vue小技巧.md","mtime":1636107879452},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"vue-小技巧-小问题1\\\"><a href=\\\"#vue-小技巧-小问题1\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> vue 小技巧&amp;小问题1</h2> <h3 id=\\\"路由变化页面数据不刷新问题\\\"><a href=\\\"#路由变化页面数据不刷新问题\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 路由变化页面数据不刷新问题</h3> <blockquote><p>场景：比如文章详情数据，依赖路由的<code>params</code>参数获取的(ajax 写在 created 生命周期里面)，因为路由懒加载的关系，退出页面再进入另一个文章页面并不会运行 created 组件生命周期，导致文章数据还是上一个文章的数据。</p></blockquote> <p><strong>解决方法：watch 监听路由是否变化</strong></p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>     watch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string\\\">'$route'</span> <span class=\\\"token punctuation\\\">(</span>to<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 监听路由是否变化</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>$route<span class=\\\"token punctuation\\\">.</span>params<span class=\\\"token punctuation\\\">.</span>articleId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">// 是否有文章id</span>\\n          <span class=\\\"token comment\\\">// 获取文章数据</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br></div></div><h3 id=\\\"settimeout-setinterval-无法用-this-访问-vue-实例\\\"><a href=\\\"#settimeout-setinterval-无法用-this-访问-vue-实例\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> setTimeout/setInterval 无法用 this 访问 VUe 实例</h3> <p><strong>场景</strong>：</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>      <span class=\\\"token function\\\">mounted</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// this指向改变</span>\\n            <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// setInterval同理</span>\\n              console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// 此时this指向Window对象</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br></div></div><p><strong>解决方法：使用箭头函数</strong></p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 箭头函数访问this实例</span>\\n<span class=\\\"token comment\\\">// 因为箭头函数本身没有绑定this 继承上一个不是箭头函数的函数的this</span>\\n<span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 使用变量保存this指向 通过变量访问this实例</span>\\n<span class=\\\"token keyword\\\">let</span> self <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 使用self变量访问this实例</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br></div></div><h3 id=\\\"setinterval-路由跳转继续运行并没有销毁\\\"><a href=\\\"#setinterval-路由跳转继续运行并没有销毁\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> setInterval 路由跳转继续运行并没有销毁</h3> <p><strong>场景</strong>：</p> <p>比如一些弹幕，走马灯文字，这类需要定时调用的，<strong>路由跳转之后，因为组件已经销毁了，但是 setInterval 还没有销毁</strong>，还在继续后台调用，控制台会不断报错，如果运算量大的话，无法及时清除，会导致严重的页面卡顿。</p> <p><strong>解决办法：在组件生命周期 beforeDestroy 停止 setInterval</strong></p> <p>组件销毁前执行的钩子函数，跟其他生命周期钩子函数的用法相同。</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token function\\\">beforeDestroy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">//我通常是把setInterval()定时器赋值给this实例，然后就可以像下面这么暂停。</span>\\n   <span class=\\\"token function\\\">clearInterval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>intervalid<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br></div></div><h3 id=\\\"vue-滚动行为-浏览器回退记忆位置-用法\\\"><a href=\\\"#vue-滚动行为-浏览器回退记忆位置-用法\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> vue 滚动行为(浏览器回退记忆位置)用法</h3> <p>这个我当时做的时候以为很难，后来做好了才发现就是一个设置而已（前提是要开启路由的 History 模式），下面做一个简单的分享。</p> <p><strong>路由设置</strong></p> \"),_vm._ssrNode(\"<ol>\",\"</ol>\",[_vm._ssrNode(\"<li>\",\"</li>\",[_vm._ssrNode(\"要使用这一功能，首先需要开启 vue-router 的 \"),_vm._ssrNode(\"<a href=\\\"https://router.vuejs.org/zh-cn/essentials/history-mode.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"history 模式\"),_c('OutboundLink')],2)],2)]),_vm._ssrNode(\" \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"如果之前一直使用的是<code>hash</code>模式(默认模式)，项目已经开发了一段时间，然后转 history 模式很可能会遇到：\"),_vm._ssrNode(\"<a href=\\\"https://juejin.im/post/5a3f629cf265da430d5839ed\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"这些问题\"),_c('OutboundLink')],2)],2),_vm._ssrNode(\" <ol start=\\\"2\\\"><li>滚动行为具体设置如下：</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>        <span class=\\\"token keyword\\\">const</span> router <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">VueRouter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          mode<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'history'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function\\\">scrollBehavior</span> <span class=\\\"token punctuation\\\">(</span>to<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">,</span> savedPosition<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>savedPosition<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 如果savedPosition存在，滚动条会自动跳到记录的值的地方</span>\\n              <span class=\\\"token keyword\\\">return</span> savedPosition\\n            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n              <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token comment\\\">// savedPosition也是一个记录x轴和y轴位置的对象</span>\\n             <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>，\\n          routes<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br></div></div>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://router.vuejs.org/zh-cn/advanced/scroll-behavior.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"vue 滚动行为文档\"),_c('OutboundLink')],2),_vm._ssrNode(\"，可以进到这里看看更详细的信息。\")],2),_vm._ssrNode(\" <h3 id=\\\"vue-路由拦截浏览器后退实现草稿保存类似需求\\\"><a href=\\\"#vue-路由拦截浏览器后退实现草稿保存类似需求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> vue 路由拦截浏览器后退实现草稿保存类似需求</h3> <p><strong>场景</strong>：</p> <p>为了防止用户突然离开，没有保存已输入的信息。</p> <p><strong>用法</strong>：</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>    <span class=\\\"token comment\\\">//在路由组件中：</span>\\n    <span class=\\\"token function\\\">mounted</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">beforeRouteLeave</span> <span class=\\\"token punctuation\\\">(</span>to<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">,</span> next<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>用户已经输入信息<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 出现弹窗提醒保存草稿，或者自动后台为其保存</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// 用户离开</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br></div></div>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"类似的还有<code>beforeEach</code>、<code>beforeRouteUpdate</code>，也分为全局钩子和组件钩子，见\"),_vm._ssrNode(\"<a href=\\\"https://router.vuejs.org/zh-cn/advanced/navigation-guards.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"路由文档\"),_c('OutboundLink')],2),_vm._ssrNode(\"。\")],2),_vm._ssrNode(\" <h3 id=\\\"v-once-只渲染元素和组件一次，优化更新渲染性能\\\"><a href=\\\"#v-once-只渲染元素和组件一次，优化更新渲染性能\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> v-once 只渲染元素和组件一次，优化更新渲染性能</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"觉得\"),_vm._ssrNode(\"<a href=\\\"https://cn.vuejs.org/v2/api/#v-cloak\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"v-once\"),_c('OutboundLink')],2),_vm._ssrNode(\"这个 api 蛮 6 的，应该很多小伙伴都没有注意到这个 api。\")],2),_vm._ssrNode(\" <p><strong>文档介绍</strong>：</p> <p><img src=\\\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/160ffd6c2dcf70e1?raw=true\\\" alt=\\\"v-once文档介绍\\\"></p> <p>这个 api 在我看来主要用于那些一次性渲染，并且不会再有操作更改这些渲染的值，这样就可以优化双向绑定的更新性能。</p> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://cn.vuejs.org/v2/guide/components.html#%E5%AF%B9%E4%BD%8E%E5%BC%80%E9%94%80%E7%9A%84%E9%9D%99%E6%80%81%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8-v-once\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"文档\"),_c('OutboundLink')],2),_vm._ssrNode(\"推荐：对低开销的静态组件使用 v-once\")],2),_vm._ssrNode(\" <p>尽管在 Vue 中渲染 HTML 很快，不过当组件中包含大量静态内容时，可以考虑使用 v-once 将渲染结果缓存起来，就像这样：</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>    Vue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'terms-of-service'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n      template<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'\\\\\\n        &lt;div v-once&gt;\\\\\\n          &lt;h1&gt;Terms of Service&lt;/h1&gt;\\\\\\n          ...很多静态内容...\\\\\\n        &lt;/div&gt;\\\\\\n      '</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br></div></div><h3 id=\\\"vue-风格指南推荐：\\\"><a href=\\\"#vue-风格指南推荐：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> vue 风格指南推荐：</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"vue 框架还有一个\"),_vm._ssrNode(\"<a href=\\\"https://cn.vuejs.org/v2/style-guide/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"风格指南\"),_c('OutboundLink')],2),_vm._ssrNode(\"推荐，如下图所示，大家也可以学习一波。\")],2),_vm._ssrNode(\" <p><img src=\\\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/160fff0ec0147156?raw=true\\\" alt=\\\"vue风格指南\\\"></p> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/codeBlack\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}