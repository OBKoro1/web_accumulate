{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/爬楼梯2.md?vue&type=template&id=27db899f&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/爬楼梯2.md","mtime":1636107879479},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"爬楼梯-2\\\"><a href=\\\"#爬楼梯-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 爬楼梯 2</h2> <h3 id=\\\"难度：简单\\\"><a href=\\\"#难度：简单\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：简单</h3> <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <p>一个小孩爬一个 n 层台阶的楼梯。他可以每次跳 1 步， 2 步 或者 3 步。实现一个方法来统计总共有多少种不同的方式爬到最顶层的台阶</p> \"),_vm._ssrNode(\"<blockquote>\",\"</blockquote>\",[_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"本题跟\"),_vm._ssrNode(\"<a href=\\\"http://obkoro1.com/web_accumulate/algorithm/simple/%E7%88%AC%E6%A5%BC%E6%A2%AF.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"爬楼梯\"),_c('OutboundLink')],2),_vm._ssrNode(\"一毛一样，只是多了可以一次跳三步，所以尽量自己做出来\")],2)]),_vm._ssrNode(\" <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <p>n = 3，1 + 1 + 1 = 2 + 1 = 1 + 2 = 3 = 3，共有 4 种方法</p> <h3 id=\\\"思路分析：\\\"><a href=\\\"#思路分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 思路分析：</h3> <p>这类题我们首先要来找其中的规律，找到了里面的规律，剩下的就好办了。</p> <p>我再列举出几个结果：</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// 1种方法</span>\\n<span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">2</span> <span class=\\\"token comment\\\">// 2种方法</span>\\n<span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token comment\\\">// 4种方法</span>\\n<span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span>  <span class=\\\"token comment\\\">// 7种方法</span>\\n<span class=\\\"token number\\\">5</span>：<span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">3</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span>  <span class=\\\"token comment\\\">// 13种方法</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br></div></div>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"查找样例中的规律：\"),_vm._ssrNode(\"<a href=\\\"http://obkoro1.com/web_accumulate/algorithm/simple/%E7%88%AC%E6%A5%BC%E6%A2%AF.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"爬楼梯\"),_c('OutboundLink')],2)],2),_vm._ssrNode(\" <h3 id=\\\"代码模板：\\\"><a href=\\\"#代码模板：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码模板：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param n: An integer\\n * @return: An integer\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">climbStairs2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br></div></div><h3 id=\\\"想一想再看答案\\\"><a href=\\\"#想一想再看答案\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-2\\\"><a href=\\\"#想一想再看答案-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-3\\\"><a href=\\\"#想一想再看答案-3\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"规律\\\"><a href=\\\"#规律\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 规律</h3> <p>除了前 3 阶楼梯是没有规律的，第 n 阶的楼梯的方法是第 i-1 、第 i-2 和第 i-3 阶楼梯所用方法的和。</p> <p>规律都给你总结好了，再给你个机会自己做出来。</p> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <p><strong>解题的核心就是逐步推导，推导出 n 前面的两个值</strong>。</p> <ol><li>递归</li></ol> <p>因为做过一遍，最先想起来的就是递归。</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">climbStairs2</span> <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">everyStairs</span> <span class=\\\"token operator\\\">=</span> k <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 循环退出条件</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">everyStairs</span><span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">everyStairs</span><span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token function\\\">everyStairs</span><span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 三个值相加求出k所用的方法</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">everyStairs</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'输出'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br></div></div><ol start=\\\"2\\\"><li>交换变量</li></ol> <p>实际上我们只需要 n 之前的三个值，就可以求出 n 所用的方法，所以我们没必要将 n 之前的所有值都推导出来。</p> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">climbStairs2</span> <span class=\\\"token operator\\\">=</span> k <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>k <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">,</span> c<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 前三阶楼梯</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> n<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">,</span> c<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>b<span class=\\\"token punctuation\\\">,</span> c<span class=\\\"token punctuation\\\">,</span> a <span class=\\\"token operator\\\">+</span> b <span class=\\\"token operator\\\">+</span> c<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 交换变量 更新前两个值，推导k的值</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> c<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'输出'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">climbStairs2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br></div></div><ol start=\\\"3\\\"><li>数组形式：</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">climbStairs2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> dp <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 初始数组 前面三个没有规律</span>\\n  <span class=\\\"token comment\\\">// 从第4阶楼梯开始推导   </span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> n<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    dp<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> dp<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> dp<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> dp<span class=\\\"token punctuation\\\">[</span>i <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 从3开始都是可以由前面3个元素相加推导出来</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> dp<span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br></div></div> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}