{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/accumulate/JS/JS基础-继承.md?vue&type=template&id=30a85a1a&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/accumulate/JS/JS基础-继承.md","mtime":1636107879468},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_c('p',[_vm._v(\"上篇文章详细解析了原型、原型链的相关知识点，这篇文章讲的是和原型链有密切关联的继承，它是前端基础中很重要的一个知识点，它对于代码复用来说非常有用，本篇将详细解析JS中的各种继承方式和优缺点进行，希望看完本篇文章能够对继承以及相关概念理解的更为透彻。\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://juejin.im/post/5d622f14f265da03a1486408\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS基础-函数、对象和原型、原型链的关系\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://juejin.im/post/5d469e0851882544b85c32ef\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"js基础-面试官想知道你有多理解call,apply,bind？\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('blockquote',[_c('p',[_c('a',{attrs:{\"href\":\"https://zh.wikipedia.org/wiki/%E7%BB%A7%E6%89%BF_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"维基百科\"),_c('OutboundLink')],1),_vm._v(\"：继承可以使得子类具有父类别的各种属性和方法，而不需要再次编写相同的代码。\")])]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('p',[_vm._v(\"PS：或者是多个类\")]),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_vm._m(20),_vm._v(\" \"),_vm._m(21),_vm._m(22),_vm._v(\" \"),_c('p',[_vm._v(\"PS： 本文中构造调用函数都不能返回其他函数，下文不再提及该点。\")]),_vm._v(\" \"),_vm._m(23),_vm._v(\" \"),_vm._m(24),_vm._v(\" \"),_c('p',[_vm._v(\"有些人在需要在原型对象上创建多个属性和方法，会使用对象字面量的形式来创建：\")]),_vm._v(\" \"),_vm._m(25),_vm._m(26),_vm._v(\" \"),_vm._m(27),_vm._m(28),_vm._v(\" \"),_vm._m(29),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"值得一提的是：很多博客中说，引用类型的属性被所有实例共享，通常会用数组来举例，实际上数组以及其他父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性也只是通过\"),_c('a',{attrs:{\"href\":\"https://juejin.im/post/5d622f14f265da03a1486408#heading-11\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"原型链查找\"),_c('OutboundLink')],1),_vm._v(\"去获取子类实例的原型(\"),_c('code',[_vm._v(\"sonFn.prototype\")]),_vm._v(\")上的值。\")])]),_vm._v(\" \"),_vm._m(30),_vm._v(\" \"),_c('p',[_vm._v(\"这种模式父类的属性、方法一开始就是定义好的，无法向父类传参，不够灵活。\")]),_vm._v(\" \"),_vm._m(31),_vm._m(32),_vm._v(\" \"),_vm._m(33),_vm._m(34),_vm._v(\" \"),_vm._m(35),_vm._v(\" \"),_vm._m(36),_vm._v(\" \"),_vm._m(37),_vm._v(\" \"),_vm._m(38),_vm._v(\" \"),_vm._m(39),_vm._m(40),_vm._v(\" \"),_vm._m(41),_vm._v(\" \"),_c('p',[_vm._v(\"PS: 关于call/apply/bind的更多细节，推荐查看我的博客：\"),_c('a',{attrs:{\"href\":\"https://juejin.im/post/5d469e0851882544b85c32ef\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"js基础-面试官想知道你有多理解call,apply,bind？[不看后悔系列]\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_vm._m(42),_vm._v(\" \"),_c('p',[_vm._v(\"优点：\")]),_vm._v(\" \"),_vm._m(43),_vm._v(\" \"),_c('p',[_vm._v(\"缺点：\")]),_vm._v(\" \"),_vm._m(44),_vm._v(\" \"),_vm._m(45),_vm._v(\" \"),_vm._m(46),_vm._v(\" \"),_vm._m(47),_vm._m(48),_vm._v(\" \"),_vm._m(49),_vm._v(\" \"),_vm._m(50),_vm._v(\" \"),_vm._m(51),_vm._v(\" \"),_vm._m(52),_vm._v(\" \"),_c('p',[_vm._v(\"优点：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"完整继承(又不是不能用)，解决了：\")]),_vm._v(\" \"),_vm._m(53),_vm._v(\" \"),_c('p',[_vm._v(\"缺点：\")]),_vm._v(\" \"),_vm._m(54),_vm._v(\" \"),_vm._m(55),_vm._v(\" \"),_vm._m(56),_vm._v(\" \"),_vm._m(57),_vm._v(\" \"),_vm._m(58),_vm._m(59),_vm._v(\" \"),_vm._m(60),_vm._v(\" \"),_vm._m(61),_vm._m(62),_vm._v(\" \"),_vm._m(63),_vm._v(\" \"),_c('p',[_vm._v(\"优点： 兼容性好，最简单的对象继承。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"缺点：\")]),_vm._v(\" \"),_vm._m(64),_vm._v(\" \"),_vm._m(65),_vm._v(\" \"),_vm._m(66),_vm._v(\" \"),_vm._m(67),_c('p',[_vm._v(\"使用场景：专门为对象来做某种固定方式的增强。\")]),_vm._v(\" \"),_vm._m(68),_vm._v(\" \"),_vm._m(69),_vm._v(\" \"),_vm._m(70),_vm._v(\" \"),_vm._m(71),_vm._m(72),_vm._v(\" \"),_vm._m(73),_vm._v(\" \"),_vm._m(74),_vm._v(\" \"),_vm._m(75),_vm._v(\" \"),_c('p',[_vm._v(\"寄生组合式继承相对于组合继承有如下优点：\")]),_vm._v(\" \"),_vm._m(76),_vm._v(\" \"),_vm._m(77),_vm._v(\" \"),_vm._m(78),_vm._v(\" \"),_vm._m(79),_vm._v(\" \"),_vm._m(80),_vm._v(\" \"),_vm._m(81),_vm._m(82),_vm._v(\" \"),_vm._m(83),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"本段摘自\"),_c('a',{attrs:{\"href\":\"http://es6.ruanyifeng.com/#docs/class-extends#%E7%AE%80%E4%BB%8B\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"阮一峰-es6入门文档\"),_c('OutboundLink')],1)])]),_vm._v(\" \"),_vm._m(84),_vm._v(\" \"),_vm._m(85),_vm._v(\" \"),_vm._m(86),_vm._v(\" \"),_c('p',[_vm._v(\"在寄生组合式继承中有一段如下一段修正constructor 指向的代码，很多人对于它的作用以及为什么要修正它不太清楚。\")]),_vm._v(\" \"),_vm._m(87),_vm._m(88),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"MDN\"),_c('OutboundLink')],1),_vm._v(\"的定义：\"),_vm._m(89),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"即返回实例对象的构造函数的引用，例如：\")]),_vm._v(\" \"),_vm._m(90),_vm._m(91),_vm._v(\" \"),_vm._m(92),_vm._v(\" \"),_c('p',[_vm._v(\"某些场景下，我们对实例对象经过多轮导入导出，我们不知道实例是从哪个函数中构造出来或者追踪实例的构造函数，较为艰难。\")]),_vm._v(\" \"),_vm._m(93),_vm._v(\" \"),_vm._m(94),_vm._m(95),_vm._v(\" \"),_vm._m(96),_vm._v(\" \"),_vm._m(97),_vm._v(\" \"),_c('p',[_vm._v(\"继承也是前端的高频面试题，了解本文中继承方法的优缺点，有助于更深刻的理解JS继承机制。除了组合继承和寄生式继承都是由其他方法组合而成的，分块理解会对它们理解的更深刻。\")]),_vm._v(\" \"),_vm._m(98),_vm._v(\" \"),_c('p',[_vm._v(\"对prototype还不是很理解的同学，可以再看看：\"),_c('a',{attrs:{\"href\":\"https://juejin.im/post/5d622f14f265da03a1486408\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS基础-函数、对象和原型、原型链的关系\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"觉得我的博客对你有帮助的话，就给我点个star吧！\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#觉得我的博客对你有帮助的话，就给我点个star吧！\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 觉得我的博客对你有帮助的话，就给我点个\"),_c('a',{attrs:{\"href\":\"https://github.com/OBKoro1/web_accumulate\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Star\"),_c('OutboundLink')],1),_vm._v(\"吧！\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"http://obkoro1.com/web_accumulate/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"前端进阶积累\"),_c('OutboundLink')],1),_vm._v(\"、\"),_c('a',{attrs:{\"href\":\"https://user-gold-cdn.xitu.io/2018/5/1/1631b6f52f7e7015?w=344&h=344&f=jpeg&s=8317\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"公众号\"),_c('OutboundLink')],1),_vm._v(\"、\"),_c('a',{attrs:{\"href\":\"https://github.com/OBKoro1\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"GitHub\"),_c('OutboundLink')],1),_vm._v(\"、wx:OBkoro1、邮箱：obkoro1@foxmail.com\")]),_vm._v(\" \"),_c('p',[_vm._v(\"以上2019/9/22\")]),_vm._v(\" \"),_c('p',[_vm._v(\"作者：\"),_c('a',{attrs:{\"href\":\"https://github.com/OBKoro1\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"OBKoro1\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('p',[_vm._v(\"参考资料：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"JS高级程序设计(红宝书)6.3继承\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://juejin.im/post/5bcb2e295188255c55472db0\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JavaScript常用八种继承方案\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"点个star支持我一下\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#点个star支持我一下\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 点个\"),_c('a',{attrs:{\"href\":\"https://github.com/OBKoro1/web_accumulate\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Star\"),_c('OutboundLink')],1),_vm._v(\"支持我一下~\")]),_vm._v(\" \"),_c('comment-comment')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"js基础-深入浅出继承\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#js基础-深入浅出继承\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" JS基础-深入浅出继承\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"本篇文章需要先理解原型、原型链以及call的相关知识：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#本篇文章需要先理解原型、原型链以及call的相关知识：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 本篇文章需要先理解原型、原型链以及\"),_c('code',[_vm._v(\"call\")]),_vm._v(\"的相关知识：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"何为继承？\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#何为继承？\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 何为继承？\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"继承是一个类从另一个类获取方法和属性的过程\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"js实现继承的原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#js实现继承的原理\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" JS实现继承的原理\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"记住这个概念，你会发现JS中的继承都是在实现这个目的，差异是它们的实现方式不同。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"复制父类的属性和方法来重写子类原型对象\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"原型链继承-new-：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型链继承-new-：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型链继承(new)：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"some \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nfatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"fatherFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"  \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类原型对象的属性或者方法'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 子类\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"obkoro1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 核心步骤：重写子类的原型对象\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 将fatherFn的实例赋值给sonFn的prototype\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sonFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类原型对象的属性或者方法'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 子类的属性/方法声明在后面,避免被覆盖\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 实例化子类\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" sonFnInstance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的实例：'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" sonFnInstance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"原型链子类实例\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型链子类实例\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型链子类实例\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://github.com/OBKoro1/articleImg_src/blob/master/2019/2019_9_16_inherit_1.png?raw=true\",\"alt\":\"原型链子类实例\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"原型链继承获取父类的属性和方法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型链继承获取父类的属性和方法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型链继承获取父类的属性和方法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"通过this声明的属性/方法都会绑定在\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"期间创建的新对象上。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"新对象的原型是\"),_c('code',[_vm._v(\"father.prototype\")]),_vm._v(\",通过原型链的属性查找到\"),_c('code',[_vm._v(\"father.prototype\")]),_vm._v(\"的属性和方法。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"理解new做了什么：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#理解new做了什么：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 理解\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"做了什么：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"new在本文出现多次，new也是JS基础中很重要的一块内容，很多知识点会涉及到new，不太理解的要多看几遍。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"创建一个全新的对象。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"这个新对象的原型(\"),_c('code',[_vm._v(\"__proto__\")]),_vm._v(\")指向函数的\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"对象。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"执行函数，函数的this会绑定在新创建的对象上。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果函数没有返回其他对象(包括数组、函数、日期对象等)，那么会自动返回这个新对象。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"返回的那个对象为构造函数的实例。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"构造调用函数返回其他对象\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#构造调用函数返回其他对象\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 构造调用函数返回其他对象\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_c('strong',[_vm._v(\"返回其他对象会导致获取不到构造函数的实例，很容易因此引起意外的问题\")]),_vm._v(\"！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"我们知道了\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"的属性/方法都跟\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"期间创建的新对象有关系\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"如果在父类中返回了其他对象(\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"的第四点)，其他对象没有父类的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"，因此导致原型链继承失败\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"我们来测试一下，修改原型链继承中的父类\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"some \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'new fatherFn 期间生成的对象'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'数组对象'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'函数对象'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'日期对象'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'正则对象'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'等等等'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'都不会返回new期间创建的新对象'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"/img/remote/1460000020462550?w=1256&h=800\",\"alt\":\"原型链继承返回其他对象,将导致原型链继承失败\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"不要使用对象字面量的形式创建原型方法：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#不要使用对象字面量的形式创建原型方法：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 不要使用对象字面量的形式创建原型方法：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"这种方式很容易在不经意间，清除/覆盖了原型对象原有的属性/方法，不该为了稍微简便一点，而使用这种写法。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"sonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 子类的prototype被清空后 重新赋值, 导致上一行代码失效\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    sonFnSome\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类原型对象的属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    one\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    two\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    three\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"还有一种常见的做法，该方式会导致函数原型对象的属性\"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"丢失：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"test\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\ntest\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"原型链继承的缺点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型链继承的缺点\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型链继承的缺点\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_c('p',[_c('strong',[_vm._v(\"父类使用\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性被所有实例共享\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"原因是：实例化的父类(\"),_c('code',[_vm._v(\"sonFn.prototype = new fatherFn()\")]),_vm._v(\")是一次性赋值到子类实例的原型(\"),_c('code',[_vm._v(\"sonFn.prototype\")]),_vm._v(\")上，它会将父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性也在赋值到\"),_c('code',[_vm._v(\"sonFn.prototype\")]),_vm._v(\"上。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"创建子类实例时，无法向父类构造函数传参，不够灵活。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"sonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"借用构造函数继承-call\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#借用构造函数继承-call\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 借用构造函数继承(call)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"arr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"some \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"params \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" arr \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 父类的参数\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nfatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"fatherFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类原型对象的属性或者方法'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"fatherParams\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"sonParams\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  fatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"call\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"fatherParams\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 核心步骤: 将fatherFn的this指向sonFn的this对象上\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"obkoro1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sonParams \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sonParams\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 子类的参数\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sonFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类原型对象的属性或者方法'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" fatherParamsArr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的参数1'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的参数2'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" sonParamsArr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的参数1'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的参数2'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" sonFnInstance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"fatherParamsArr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"sonParamsArr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 实例化子类\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'借用构造函数子类实例'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" sonFnInstance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"借用构造函数继承的子类实例\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#借用构造函数继承的子类实例\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 借用构造函数继承的子类实例\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"/img/remote/1460000020462551?w=852&h=360\",\"alt\":\"借用构造函数继承的子类实例\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"借用构造函数继承做了什么？\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#借用构造函数继承做了什么？\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 借用构造函数继承做了什么？\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"声明类，组织参数等，只是辅助的上下文代码，核心是借用构造函数使用\"),_c('code',[_vm._v(\"call\")]),_vm._v(\"做了什么：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"一经调用\"),_c('code',[_vm._v(\"call/apply\")]),_vm._v(\"它们就会立即执行函数，并在函数执行时改变函数的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"指向\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"fatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"call\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"fatherParams\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"在子类中使用\"),_c('code',[_vm._v(\"call\")]),_vm._v(\"调用父类，\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"将会被立即执行，并且将\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"函数的this指向\"),_c('code',[_vm._v(\"sonFn\")]),_vm._v(\"的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"因为函数执行了，所以\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"使用this声明的函数都会被\"),_c('strong',[_vm._v(\"声明到\"),_c('code',[_vm._v(\"sonFn\")]),_vm._v(\"的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"对象\")]),_vm._v(\"下。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"实例化子类，this将指向\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"期间创建的新对象，返回该新对象。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"对\"),_c('code',[_vm._v(\"fatherFn.prototype\")]),_vm._v(\"没有任何操作，无法继承。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"该对象的属性为：子类和父类声明的\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"属性/方法，它的原型是\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"借用构造函数继承的优缺点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#借用构造函数继承的优缺点\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 借用构造函数继承的优缺点\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"可以向父类传递参数\")]),_vm._v(\" \"),_c('li',[_vm._v(\"解决了原型链继承中：父类属性使用\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性会在所有实例共享的问题。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"只能继承父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性/方法，不能继承父类\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"上的属性/方法。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"父类方法无法复用：因为无法继承父类的\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"，所以每次子类实例化都要执行父类函数，重新声明父类\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"里所定义的方法，因此方法无法复用。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"组合继承-call-new\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#组合继承-call-new\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 组合继承(call+new)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_c('strong',[_vm._v(\"原理\")]),_vm._v(\"：使用原型链继承(\"),_c('code',[_vm._v(\"new\")]),_vm._v(\")将\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"声明的属性/方法继承至子类的\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"上，使用借用构造函数来继承父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明属性和方法至子类实例的属性上。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"arr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"some \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"params \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" arr \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 父类的参数\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nfatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"fatherFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类原型对象的属性或者方法'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  fatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"call\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'借用构造继承'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'第二次调用'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 借用构造继承: 继承父类通过this声明属性和方法至子类实例的属性上\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"obkoro1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'原型链继承'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'第一次调用'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 原型链继承: 将`this`和`prototype`声明的属性/方法继承至子类的`prototype`上\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sonFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类原型对象的属性或者方法'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" sonFnInstance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'组合继承子类实例'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" sonFnInstance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"组合继承的子类实例\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#组合继承的子类实例\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 组合继承的子类实例\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://github.com/OBKoro1/articleImg_src/blob/master/2019/2019_9_16_inherit_4.png?raw=true\",\"alt\":\"组合继承的子类实例\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"从图中可以看到\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性/方法，在子类实例的属性上，和其原型上都复制了一份，原因在代码中也有注释：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"原型链继承: 父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"声明的属性/方法继承至子类的\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"上。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"借用构造继承: 父类通过this声明属性和方法继承至子类实例的属性上。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"组合继承的优缺点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#组合继承的优缺点\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 组合继承的优缺点\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明属性/方法被子类实例共享的问题(原型链继承的问题)\\n每次实例化子类将重新初始化父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性，实例根据原型链查找规则，每次都会\")]),_vm._v(\" \"),_c('li',[_vm._v(\"父类通过\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"声明的属性/方法无法继承的问题(借用构造函数的问题)。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"两次调用父类函数(\"),_c('code',[_vm._v(\"new fatherFn()\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"fatherFn.call(this)\")]),_vm._v(\")，造成一定的性能损耗。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"因调用两次父类,导致父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性/方法，生成两份的问题。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"原型链上下文丢失：子类和父类通过prototype声明的属性/方法都存在于子类的prototype上\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"原型式继承-object-create\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型式继承-object-create\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型式继承(\"),_c('code',[_vm._v(\"Object.create()\")]),_vm._v(\")\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"继承对象原型-object-create-实现\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#继承对象原型-object-create-实现\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 继承对象原型-Object.create()实现\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"以下是\"),_c('code',[_vm._v(\"Object.create()\")]),_vm._v(\"的模拟实现，使用\"),_c('code',[_vm._v(\"Object.create()\")]),_vm._v(\"可以达成同样的效果，基本上现在都是使用\"),_c('code',[_vm._v(\"Object.create()\")]),_vm._v(\"来做对象的原型继承。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cloneObject\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"obj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token constant\"}},[_vm._v(\"F\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token constant\"}},[_vm._v(\"F\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" obj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 将被继承的对象作为空函数的prototype\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"F\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回new期间创建的新对象,此对象的原型为被继承的对象, 通过原型链查找可以拿到被继承对象的属性\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"PS：上面\"),_c('code',[_vm._v(\"Object.create()\")]),_vm._v(\"实现原理可以记一下，有些公司可能会让你讲一下它的实现原理。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"例子：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#例子：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 例子：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" oldObj \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" p\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" newObj \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cloneObject\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"oldObj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\noldObj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"p \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'oldObj newObj'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" oldObj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" newObj\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"/img/remote/1460000020462553?w=477&h=75\",\"alt\":\"原型式继承\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"原型式继承优缺点：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#原型式继承优缺点：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 原型式继承优缺点：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"因为旧对象(\"),_c('code',[_vm._v(\"oldObj\")]),_vm._v(\")是实例对象(\"),_c('code',[_vm._v(\"newObj\")]),_vm._v(\")的原型，多个实例共享被继承对象的属性，存在篡改的可能。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"无法传参\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"寄生式继承-封装继承过程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#寄生式继承-封装继承过程\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 寄生式继承(封装继承过程)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"创建一个\"),_c('strong',[_vm._v(\"仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象\")]),_vm._v(\"，最后返回对象。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"createAnother\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"original\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" clone \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cloneObject\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"original\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 继承一个对象 返回新函数\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// do something 以某种方式来增强对象\")]),_vm._v(\"\\n  clone\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"some\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 方法\")]),_vm._v(\"\\n  clone\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"obkoro1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'封装继承过程'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 属性\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" clone\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回这个对象\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"寄生组合式继承-call-寄生式封装\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#寄生组合式继承-call-寄生式封装\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 寄生组合式继承(call+寄生式封装)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"寄生组合式继承原理：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#寄生组合式继承原理：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 寄生组合式继承原理：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"使用借用构造函数(\"),_c('code',[_vm._v(\"call\")]),_vm._v(\")来\"),_c('strong',[_vm._v(\"继承父类this声明的属性/方法\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"通过寄生式封装函数设置父类prototype为子类prototype的原型来继\"),_c('strong',[_vm._v(\"承父类的prototype声明的属性/方法\")]),_vm._v(\"。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fatherFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"arr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"some \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"params \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" arr \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 父类的参数\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\nfatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"fatherFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'父类原型对象的属性或者方法'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  fatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"call\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'借用构造继承'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 核心1 借用构造继承: 继承父类通过this声明属性和方法至子类实例的属性上\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"obkoro1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类的this属性'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 核心2 寄生式继承：封装了son.prototype对象原型式继承father.prototype的过程，并且增强了传入的对象。\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"inheritPrototype\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" fatherFnPrototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" Object\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"create\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 原型式继承：浅拷贝father.prototype对象 father.prototype为新对象的原型\")]),_vm._v(\"\\n  son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" fatherFnPrototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 设置father.prototype为son.prototype的原型\")]),_vm._v(\"\\n  son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"constructor \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 修正constructor 指向\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"inheritPrototype\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"sonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" fatherFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nsonFn\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sonFnSome \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'子类原型对象的属性或者方法'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" sonFnInstance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'寄生组合式继承子类实例'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" sonFnInstance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"寄生组合式继承子类实例\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#寄生组合式继承子类实例\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 寄生组合式继承子类实例\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://github.com/OBKoro1/articleImg_src/blob/master/2019/2019_9_16_inherit_6.png?raw=true\",\"alt\":\"寄生组合式继承子类实例\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"寄生组合式继承是最成熟的继承方法：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#寄生组合式继承是最成熟的继承方法：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 寄生组合式继承是最成熟的继承方法：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"寄生组合式继承是最成熟的继承方法, 也是现在最常用的继承方法，众多JS库采用的继承方案也是它。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_c('p',[_vm._v(\"只调用一次父类\"),_c('code',[_vm._v(\"fatherFn\")]),_vm._v(\"构造函数。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"避免在子类prototype上创建不必要多余的属性。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"使用原型式继承父类的prototype，保持了原型链上下文不变。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"子类的prototype只有子类通过prototype声明的属性/方法和父类prototype上的属性/方法泾渭分明。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"es6-extends继承：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#es6-extends继承：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" ES6 extends继承：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"ES6继承的原理跟寄生组合式继承是一样的。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"ES6 \"),_c('code',[_vm._v(\"extends\")]),_vm._v(\"核心代码：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这段代码是通过\"),_c('a',{attrs:{\"href\":\"%5Bhttps://www.babeljs.cn/repl%5D(https://www.babeljs.cn/repl)\"}},[_vm._v(\"babel在线编译\")]),_vm._v(\"成es5, 用于子类prototype原型式继承父类\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"的属性/方法。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 寄生式继承 封装继承过程\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"_inherits\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 原型式继承: 设置father.prototype为son.prototype的原型 用于继承father.prototype的属性/方法\")]),_vm._v(\"\\n  son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" Object\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"create\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"father \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"constructor \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 修正constructor 指向\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 将父类设置为子类的原型 用于继承父类的静态属性/方法(father.some)\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    Object\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"setPrototypeOf\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"?\")]),_vm._v(\" Object\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"setPrototypeOf\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"__proto__ \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" father\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"另外子类是通过借用构造函数继承(\"),_c('code',[_vm._v(\"call\")]),_vm._v(\")来继承父类通过\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"声明的属性/方法，也跟寄生组合式继承一样。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"es5继承与es6继承的区别：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#es5继承与es6继承的区别：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" ES5继承与ES6继承的区别：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"ES5的继承实质上是\"),_c('strong',[_vm._v(\"先创建子类的实例对象，再将父类的方法添加到this上\")]),_vm._v(\"。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"ES6的继承是\"),_c('strong',[_vm._v(\"先创建父类的实例对象this，再用子类的构造函数修改this\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"因为子类没有自己的this对象，所以必须先调用父类的super()方法。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"扩展：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#扩展：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 扩展：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"为什么要修正constructor指向？\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#为什么要修正constructor指向？\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 为什么要修正constructor指向？\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"constructor \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" son\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 修正constructor 指向\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"constructor的作用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#constructor的作用\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" constructor的作用\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('strong',[_vm._v(\"返回创建实例对象的\"),_c('code',[_vm._v(\"Object\")]),_vm._v(\"构造函数的引用\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" instance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\ninstance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"constructor \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// sonFn函数\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"constructor的应用场景：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#constructor的应用场景：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"的应用场景：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"当我们只有实例对象没有构造函数的引用时\")]),_vm._v(\"：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这个时候就可以通过实例对象的\"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"属性来得到构造函数的引用：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" instance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"sonFn\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 实例化子类\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"export\")]),_vm._v(\" instance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 多轮导入+导出，导致sonFn追踪非常麻烦，或者不想在文件中再引入sonFn\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\"  fn \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" instance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"constructor\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// do something： new fn() / fn.prototype / fn.length / fn.arguments等等\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"保持constructor指向的一致性：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#保持constructor指向的一致性：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 保持\"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"指向的一致性：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"因此每次重写函数的prototype都应该修正一下\"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"的指向，以保持读取\"),_c('code',[_vm._v(\"constructor\")]),_vm._v(\"行为的一致性。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"小结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#小结\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 小结\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"建议多看几遍本文，建个\"),_c('code',[_vm._v(\"html\")]),_vm._v(\"文件试试文中的例子，两相结合更佳！\")])}]\n\nexport { render, staticRenderFns }"]}