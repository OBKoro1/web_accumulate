{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/反转整数.md?vue&type=template&id=7633e61d&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/反转整数.md","mtime":1636107879479},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"反转整数\"><a class=\"header-anchor\" href=\"#反转整数\" aria-hidden=\"true\">#</a> 反转整数</h2>\n<h3 id=\"描述\"><a class=\"header-anchor\" href=\"#描述\" aria-hidden=\"true\">#</a> 描述</h3>\n<p>将一个整数中的数字进行颠倒，当颠倒后的整数溢出时，返回 0 (标记为 32 位整数)。</p>\n<h3 id=\"样例：\"><a class=\"header-anchor\" href=\"#样例：\" aria-hidden=\"true\">#</a> 样例：</h3>\n<p>给定 x = 123，返回 321</p>\n<p>给定 x = -123，返回 -321</p>\n<p>给定 x = 1534236469， 返回 0</p>\n<hr>\n<h3 id=\"这题很简单-自己想一下！\"><a class=\"header-anchor\" href=\"#这题很简单-自己想一下！\" aria-hidden=\"true\">#</a> 这题很简单,自己想一下！</h3>\n<h3 id=\"这题很简单-自己想一下！-2\"><a class=\"header-anchor\" href=\"#这题很简单-自己想一下！-2\" aria-hidden=\"true\">#</a> 这题很简单,自己想一下！</h3>\n<h3 id=\"这题很简单-自己想一下！-3\"><a class=\"header-anchor\" href=\"#这题很简单-自己想一下！-3\" aria-hidden=\"true\">#</a> 这题很简单,自己想一下！</h3>\n<p>给</p>\n<p>你</p>\n<p>点</p>\n<p>时</p>\n<p>间</p>\n<p>想</p>\n<p>一</p>\n<p>下</p>\n<hr>\n<h3 id=\"解法：\"><a class=\"header-anchor\" href=\"#解法：\" aria-hidden=\"true\">#</a> 解法：</h3>\n<ol>\n<li>最优：转字符串 再转数组进行操作</li>\n<li>看到有人用四则运算+遍历反转整数，会把这个解法放到下面</li>\n</ol>\n<h3 id=\"提示\"><a class=\"header-anchor\" href=\"#提示\" aria-hidden=\"true\">#</a> 提示:</h3>\n<p>整数溢出的值为<code>Math.pow(2, 31) - 1</code>和<code>Math.pow(-2, 31) + 1</code>，转为数字：<code>2147483647</code>和<code>-2147483647</code></p>\n<p>这部分跟位操作符，二进制有关，有兴趣可以去搜下。</p>\n<h3 id=\"code\"><a class=\"header-anchor\" href=\"#code\" aria-hidden=\"true\">#</a> code:</h3>\n<ol>\n<li>转数组操作：</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reverseInteger</span> <span class=\"token operator\">=</span> n <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    n <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 负数提取数字</span>\n    n <span class=\"token operator\">=</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    n <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>n<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转数字</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    n <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转字符</span>\n    n <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转为数组 颠倒数组 再合字符 最后转数字</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">>=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">&lt;=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 判断溢出</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>遍历，一位一位颠倒：</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reverseInteger</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 从个位起一位一位的颠倒</span>\n    res <span class=\"token operator\">=</span> res <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    n <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// n除以10， 一位数转化完成 到最后小于1 被转成0 退出循环</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">>=</span> <span class=\"token number\">2147483647</span> <span class=\"token operator\">||</span> res <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">2147483647</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"转数组操作运行效率也更高点：\"><a class=\"header-anchor\" href=\"#转数组操作运行效率也更高点：\" aria-hidden=\"true\">#</a> 转数组操作运行效率也更高点：</h3>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/weibo_img_move/005Y4rCogy1fujnet3b8vj318z0kh41p.jpg?raw=true\" alt=\"\">\n<!-- 特殊字符串：用于修改/删除markdown的结尾提示语-OBKoro1 --></p>\n<h3 id=\"点个star支持我一下\"><a class=\"header-anchor\" href=\"#点个star支持我一下\" aria-hidden=\"true\">#</a> 点个<a href=\"https://github.com/OBKoro1/Brush_algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">Star<OutboundLink/></a>支持我一下~</h3>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n<!-- more -->\n<comment-comment/>\n</div>\n",null]}