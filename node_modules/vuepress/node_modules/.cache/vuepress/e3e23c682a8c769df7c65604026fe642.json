{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/分解质因数.md?vue&type=template&id=563fc686&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/simple/分解质因数.md","mtime":1636107879478},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"分解质因数\\\"><a href=\\\"#分解质因数\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 分解质因数</h1> <h3 id=\\\"难度：简单\\\"><a href=\\\"#难度：简单\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：简单</h3> <h3 id=\\\"质因数的定义：\\\"><a href=\\\"#质因数的定义：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 质因数的定义：</h3> <p>能整除给定正整数的质数。</p> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"百度百科：\"),_vm._ssrNode(\"<a href=\\\"https://baike.baidu.com/item/%E8%B4%A8%E5%9B%A0%E6%95%B0#reference-%5B1%5D-341369-wrap\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"质因数\"),_c('OutboundLink')],2)],2),_vm._ssrNode(\" <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <ol><li>将一个整数分解为若干质因数之乘积</li> <li>你需要从小到大排列质因子</li></ol> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <ul><li>给出 <code>10</code>, 返回 <code>[2, 5]</code></li> <li>给出 <code>660</code>, 返回 <code>[2, 2, 3, 5, 11]</code></li></ul> <h3 id=\\\"题目分析：\\\"><a href=\\\"#题目分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 题目分析：</h3> <p>从小到大排列质因子，需要将同一个质因子整除干净。</p> <p>比如：20 可以被 2 整除两次。</p> <p>提示：需要两层循环。</p> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 分解质因数</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">primeFactorization</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>num<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// 不需要判定i是否为质数，如果i不为质数，且能整除num时，num早被i的因数所除。故能整除num的i必是质数。</span>\\n  <span class=\\\"token comment\\\">// i * i &gt; num 退出循环 num一开始会在第二层循环被i整除成比较小的数字</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">*</span> i <span class=\\\"token operator\\\">&lt;=</span> num<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">%</span> i <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 直到有余数退出循环</span>\\n      num <span class=\\\"token operator\\\">=</span> num <span class=\\\"token operator\\\">/</span> i<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 改变num</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 没有余数 能整除 这一步会找出所有质因数 不会出现4的那种情况</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">!==</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>num<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// num到最后也是质因数</span>\\n  <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br></div></div> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}