{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/koro/work/web_my/web_accumulate/docs/algorithm/induction/反转3位整数.md?vue&type=template&id=35db6991&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/algorithm/induction/反转3位整数.md","mtime":1636107879476},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557296867191},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557296867284}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"反转一个-3-位整数\\\"><a href=\\\"#反转一个-3-位整数\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 反转一个 3 位整数</h1> <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <p>反转一个只有 3 位数的整数</p> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <p>123 反转之后是 321。\\n900 反转之后是 9。</p> <h3 id=\\\"题目分析：\\\"><a href=\\\"#题目分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 题目分析：</h3> <ul><li><code>009</code>这种形式需要转为<code>9</code></li> <li>最后输出的数字。</li></ul> <hr> <h3 id=\\\"转数组操作\\\"><a href=\\\"#转数组操作\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 转数组操作:</h3> <p>这是最简单，最容易想到的答案：</p> <ol><li>数字转成字符串再转成数组</li> <li>颠倒数组(翻转了),恢复成字符串</li> <li>输出正常数字，这里用了+号。(用<code>parseInt</code>等也是可以的)</li></ol> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reverseInteger</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>number<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reverse</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><h3 id=\\\"取余数，逐个颠倒\\\"><a href=\\\"#取余数，逐个颠倒\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 取余数，逐个颠倒</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reverseInteger</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token operator\\\">%</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">*</span><span class=\\\"token number\\\">100</span><span class=\\\"token operator\\\">+</span><span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token operator\\\">%</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">*</span><span class=\\\"token number\\\">10</span><span class=\\\"token operator\\\">+</span><span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">*</span><span class=\\\"token number\\\">1</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><p>通过取余操作，个位转百位，十位转十位，百位转个位。</p> <p>比如：123=&gt;300+20+1,输出321</p> <h3 id=\\\"拼接字符串：\\\"><a href=\\\"#拼接字符串：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 拼接字符串：</h3> <ul><li>数字转字符串</li> <li>从后往前取对应位置字符,拼接成一个颠倒的字符串</li></ul> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reverseInteger</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> str <span class=\\\"token operator\\\">=</span> number<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转字符</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span>str<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">charAt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> str<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">charAt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> str<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">charAt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 取对应位置字符，拼接成新的字符串</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br></div></div> \"),_vm._ssrNode(\"<h3 id=\\\"点个star支持我一下\\\">\",\"</h3>\",[_vm._ssrNode(\"<a href=\\\"#点个star支持我一下\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Star\"),_c('OutboundLink')],2),_vm._ssrNode(\"支持我一下~\")],2),_vm._ssrNode(\" \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}